/* core_modbusWidget4 9.12.5 2018-08-27T16:54:18+00:00 b689bea882f7+ (release/9.12.0) tip */
function _toConsumableArray(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}function _asyncToGenerator(e){return function(){var n=e.apply(this,arguments);return new Promise(function(e,t){function i(a,r){try{var l=n[a](r),o=l.value}catch(e){return void t(e)}return l.done?void e(o):Promise.resolve(o).then(function(e){i("next",e)},function(e){i("throw",e)})}return i("next")})}}function _asyncToGenerator(e){return function(){var n=e.apply(this,arguments);return new Promise(function(e,t){function i(a,r){try{var l=n[a](r),o=l.value}catch(e){return void t(e)}return l.done?void e(o):Promise.resolve(o).then(function(e){i("next",e)},function(e){i("throw",e)})}return i("next")})}}function _asyncToGenerator(e){return function(){var n=e.apply(this,arguments);return new Promise(function(e,t){function i(a,r){try{var l=n[a](r),o=l.value}catch(e){return void t(e)}return l.done?void e(o):Promise.resolve(o).then(function(e){i("next",e)},function(e){i("throw",e)})}return i("next")})}}!function(){"use strict";angular.module("c8y.modbusWidget4",[])}(),function(){"use strict";angular.module("c8y.modbusWidget4").constant("fieldbusConstants",{CANOPEN_DEVICE_FRAGMENT:"c8y_CANopenDevice",MODBUS_DEVICE_FRAGMENT:"c8y_ModbusDevice",PROFIBUS_DEVICE_FRAGMENT:"c8y_ProfibusDevice"})}(),function(){"use strict";function e(e,n){e.add({name:"Modbus Device Widget",nameDisplay:n("Fieldbus device widget"),description:n("Allows for seeing status and operating modbus device using widget"),widgetComponent:"c8yModbusWidget",configComponent:"c8yModbusWidgetConfig",options:{noDeviceTarget:!1,noNewWidgets:!1,deviceTargetNotRequired:!1,groupsSelectable:!1},showIf:["c8yFieldbus",function(e){return e.isApplicationAvailable()}]})}e.$inject=["c8yComponentsProvider","gettext"],angular.module("c8y.modbusWidget4").config(e)}();var _extends=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e};!function(){"use strict";function e(e,n,t,i,a,r){function l(e){var n=e.categoryConfigElements,t=e.deviceType,i=e.elements,r=e.categoryElements,l=e.widgetConfig;return{categoryConfigElements:_.map(n,function(e){var n=e.refId,r=e.type,l=a.findElementBestMatchingRefId(i,n,r);if(l)return _.defaults(e,{name:l.name,type:l.meta.type.value,typeLabel:a.getElementTypeLabel(l,t),show:!0,label:l.name})}),deviceType:t,elements:i,categoryElements:r,widgetConfig:l}}function o(e){var n=e.categoryConfigElements,t=e.deviceType,i=e.elements,r=e.categoryElements,l=e.widgetConfig;return{categoryConfigElements:[].concat(_toConsumableArray(n),_toConsumableArray(_(r).filter(function(e){return!_.find(n,{refId:a.getElementRefId(e)})}).map(function(e){return{refId:a.getElementRefId(e),label:e.name,show:s(e,l),name:e.name,type:e.meta.type.value,typeLabel:a.getElementTypeLabel(e,t)}}).value())),deviceType:t,elements:i,categoryElements:r,widgetConfig:l}}function s(e,n){return u(e)?c(e,n):m(e,n)}function u(e){return e.meta.type===a.ElementType.REGISTER}function c(e,n){var t=e.id,i=e.input,a=e.number,r=e.startBit,l=n.registers;return _.includes(l,t)||_.includes(l,[i,a,r].join(","))||_.includes(l,a)||!!_.find(l,{number:a,startBit:r})}function m(e,n){var t=e.id,i=e.input,a=e.number,r=n.coils;return _.includes(r,t)||_.includes(r,[i,a].join(","))||_.includes(r,a)}function d(e,n){_.set(e,"categoriesConfig",_.map(n,function(e){return{name:e.name,label:e.label,elements:_.compact(_.map(e.elements,function(e){return e.show?_.pick(e,["refId","label","type"]):void 0}))}})),_.unset(e,"coils"),_.unset(e,"registers")}function g(e){var n=e.fieldbusDevice,t=e.deviceType,i=a.getElementsWithMeta(t);return _.has(n,T)||_.has(n,x)?i:_.filter(i,v)}function v(e){return e.meta.type===a.ElementType.REGISTER&&!e.input}function f(n){return a.isFieldbusDevice(n)?e.resolve(n):i.detail(t.getId(n)).then(t.getResData)}function p(e){return a.getDeviceTypeFromDevice(e)}function b(e){return _.get(e,"category","")}function y(e){var n=e.categoriesConfig,t=e.categories,i=e.deviceType,l=e.widgetConfig;return[].concat(_toConsumableArray(n),_toConsumableArray(_(t).pickBy(function(e,t){return!_.find(n,{name:t})}).map(function(e,n){return{name:n,label:n||r("Uncategorized"),elements:_.map(e,function(e){return{refId:a.getElementRefId(e),label:e.name,show:s(e,l),name:e.name,type:e.meta.type.value,typeLabel:a.getElementTypeLabel(e,i)}})}}).value()))}function h(e){return _.some(e,function(e){return _.some(e.elements,"show")})}var E=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(t){var i,a;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:if(i=_.get(t,"device"),!i){n.next=6;break}return n.next=4,f(i);case 4:return a=n.sent,n.abrupt("return",w({fieldbusDevice:a,widgetConfig:t}));case 6:return n.abrupt("return",e.resolve([]));case 7:case"end":return n.stop()}},n,this)}));return function(e){return n.apply(this,arguments)}}(),w=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(n){var t,i,a,s=n.fieldbusDevice,u=n.widgetConfig;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,p(s);case 2:if(t=e.sent,i=g({fieldbusDevice:s,deviceType:t}),!_.isEmpty(i)){e.next=6;break}return e.abrupt("return",[]);case 6:return a=_.groupBy(i,b),e.abrupt("return",_(u).chain().get("categoriesConfig",[]).map(function(e){var n=_.get(a,e.name);_.defaults(e,{label:e.name||r("Uncategorized")});var s=_.flow([l,o])({categoryConfigElements:e.elements,deviceType:t,elements:i,categoryElements:n,widgetConfig:u}),c=s.categoryConfigElements;return e.elements=c,e}).thru(function(e){return y({categoriesConfig:e,categories:a,deviceType:t,widgetConfig:u})}).value());case 8:case"end":return e.stop()}},e,this)}));return function(n){return e.apply(this,arguments)}}(),C=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(t){var r,l,o,s,u,c,m,d,v,f;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return r=_.get(t,"device.id"),l=i.detailRealtime(r),o=l.then(p),s=I(r,t).then(function(e){return _.get(t,"categoriesConfig",e)}),n.next=6,e.all({fieldbusDevice:l,deviceType:o,categoriesConfig:s});case 6:return u=n.sent,c=u.fieldbusDevice,m=u.deviceType,d=u.categoriesConfig,v=g({fieldbusDevice:c,deviceType:m}),f=_.map(d,function(e){return _.defaults(_extends({},e,{elements:_(e.elements).map(function(e){var n=a.findElementBestMatchingRefId(v,e.refId,e.type);return n?_.defaults(_extends({},e,n),{label:n.name,show:!0}):e}).filter("show").value()}),{label:e.name})}),n.abrupt("return",{device:c,categories:f});case 13:case"end":return n.stop()}},n,this)}));return function(e){return n.apply(this,arguments)}}(),I=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(n,t){var i,a,r,l;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,f(n);case 2:return i=e.sent,e.next=5,p(i);case 5:return a=e.sent,r=g({fieldbusDevice:i,deviceType:a}),l=_.groupBy(r,b),e.abrupt("return",y({categoriesConfig:[],categories:l,deviceType:a,widgetConfig:t}));case 9:case"end":return e.stop()}},e,this)}));return function(n,t){return e.apply(this,arguments)}}(),T=n.MODBUS_DEVICE_FRAGMENT,x=n.PROFIBUS_DEVICE_FRAGMENT,R={getConfigModel:E,updateConfigModel:d,getWidgetModel:C,isAtLeastOneElementSelected:h,isDiscreteIOSelectedInConfig:window.c8y_testing&&m,isRegisterSelectedInConfig:window.c8y_testing&&c};return R}e.$inject=["$q","fieldbusConstants","c8yBase","c8yDevices","c8yDeviceDatabase","gettext"],angular.module("c8y.modbusWidget4").factory("modbusWidgetSvc",e)}(),function(){"use strict";function e(e,n){function t(){_.isEqual(o,l.config.device)||(o=l.config.device,r()),_.isEqual(s,l.categoriesConfig)||(s=_.cloneDeep(l.categoriesConfig),i())}function i(){a()&&n.updateConfigModel(l.config,s)}function a(){if(s){var e=n.isAtLeastOneElementSelected(s);return l.modbusWidgetConfigForm.modbusWidgetValidation.$setValidity("at-least-one-field-selected",e),l.atLeastOneElementSelected=e,e}return!1}var r=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,n.getConfigModel(l.config);case 2:l.categoriesConfig=t.sent,e.$apply();case 4:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}(),l=this,o=void 0,s=void 0;_.assign(l,{$doCheck:t})}e.$inject=["$rootScope","modbusWidgetSvc"],angular.module("c8y.modbusWidget4").component("c8yModbusWidgetConfig",{templateUrl:"core_modbusWidget4/widget-config.html",bindings:{config:"<"},controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e,n,t,i,a,r,l,o,s,u,c){function m(e){var n=e.config;n&&I(T.config)}function d(){_.isEqual(M,T.categories)||(M=_.cloneDeep(T.categories),E()),_.isEqual(k,T.device)||(k=_.cloneDeep(T.device),g())}function g(){_.has(k,x)?T.updateElement=l.updateElement:_.has(k,R)&&(T.updateElement=o.updateElement),E()}function v(e){return e.meta.enumType&&e.meta.enumValues&&2===e.meta.enumValues.length}function f(e){return e.meta.enumType&&e.meta.enumValues&&(1===e.meta.enumValues.length||e.meta.enumValues.length>2)}function p(e){return!e.meta.enumType}function b(e,n){return T.canUpdateElement(T.device,n)?i.validationHints(e,{required:u("This field is required!"),"value-in-register-range":c.getString(A,_.get(n,"meta.valuesRange.custom"))}):""}function y(e){O.push(e)}function h(e){O=_.without(O,e),E(500)}function E(e){n(w,e)}function w(){_.forEach(T.categories,function(e){_.forEach(e.elements,function(e){C(e)||(e.meta.type===a.ElementType.DISCRETE_IO&&(e.valueObj=_.find(e.meta.enumValues,{value:V(T.device,e)})),e.meta.type===a.ElementType.REGISTER&&(e.meta.enumType?e.valueObj=_.find(e.meta.enumValues,{value:V(T.device,e)}):_.set(e,"valueObj.value",V(T.device,e))))})})}function C(e){return T.isElementChangePending(e)||_.includes(O,e)}var I=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(t){var i;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:if(!t){n.next=6;break}return n.next=3,s.getWidgetModel(t);case 3:i=n.sent,_.assign(T,i),e.$apply();case 6:case"end":return n.stop()}},n,this)}));return function(e){return n.apply(this,arguments)}}(),T=this,x=t.PROFIBUS_DEVICE_FRAGMENT,R=t.CANOPEN_DEVICE_FRAGMENT,S=r.isElementChangePending,D=r.canUpdateElement,W=r.updateElement,V=r.getCurrentElementValue,A=u("Value out of range! Allowed values from {{min | number}} to {{max | number}} with step {{step | number}}. Use up/down arrows to find nearest possible value."),O=[],M=void 0,k=void 0;_.assign(T,{$onChanges:m,$doCheck:d,isElementChangePending:S,canUpdateElement:D,updateElement:W,shouldShowSwitch:v,shouldShowEnumSelect:f,shouldShowNumberInput:p,validationHints:b,focus:y,blur:h})}e.$inject=["$rootScope","$timeout","fieldbusConstants","c8yBase","c8yDeviceDatabase","c8yModbusDevice","c8yProfibusDevice","c8yCanopenDevice","modbusWidgetSvc","gettext","gettextCatalog"],angular.module("c8y.modbusWidget4").component("c8yModbusWidget",{templateUrl:"core_modbusWidget4/widget.html",bindings:{config:"<"},controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e){var n;n='<ng-form class="widget-config-modbus" name="vm.modbusWidgetConfigForm">\n  <div ng-if="vm.categoriesConfig.length === 0" class="alert alert-warning" translate>\n    No categories available.\n  </div>\n\n  <div ui-sortable="{handle: \'.handle-category\'}" ng-model="vm.categoriesConfig">\n    <div class="panel panel-default" ng-repeat="category in vm.categoriesConfig" style="margin-bottom:2px">\n      <div class="panel-heading">\n        <div class="flex-row">\n          <div class="handle-category">\n            <i c8y-icon="bars" style="cursor:move"></i>\n          </div>\n\n          <div class="ui-sortable-title">\n            <label class="editable" ng-if="category.name">\n              <input class="form-control" ng-model="category.label">\n              <span>{{category.label}}</span>\n            </label>\n            <label class="editable text-muted" ng-if="!category.name">\n              <span>{{category.label | translate}}</span>\n            </label>\n          </div>\n\n          <div class="ui-sortable-actions text-right">\n            <button class="btn btn-link" ng-click="category.isCollapsed = !category.isCollapsed">\n              <i c8y-icon="chevron-down" ng-if="category.isCollapsed"></i>\n              <i c8y-icon="chevron-up" ng-if="!category.isCollapsed"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class="panel-body" uib-collapse="category.isCollapsed">\n        <table class="table table-vertical-middle form-group">\n          <thead>\n          <th style="width:5%">\n          </th>\n          <th style="width:5%">\n            <label>{{\'Show\' | translate}}</label>\n          </th>\n          <th style="width:34%">\n            <label>{{\'Label\' | translate}}</label>\n          </th>\n          <th style="width:28%">\n            <label>{{\'Name\' | translate}}</label>\n          </th>\n          <th style="width:28%">\n            <label>{{\'Type\' | translate}}</label>\n          </th>\n          </thead>\n          <tbody ui-sortable="{handle: \'.handle-property\'}" ng-model="category.elements">\n          <tr class="property" ng-repeat="element in category.elements">\n            <td class="handle-property" style="width:5%">\n              <i c8y-icon="bars" style="cursor:move"></i>\n            </td>\n            <td style="width:5%;vertical-align:middle">\n              <label class="c8y-checkbox input-sm" style="line-height:30px">\n                <input type="checkbox" ng-model="element.show">\n                <span></span>\n              </label>\n            </td>\n            <td style="width:34%">\n              <label class="editable">\n                <input class="form-control" ng-model="element.label">\n                <span>{{element.label}}</span>\n              </label>\n            </td>\n            <td style="width:28%">\n              {{element.name}}\n            </td>\n            <td style="width:28%">\n              {{element.typeLabel | translate}}\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <input type="hidden" name="modbusWidgetValidation" ng-model="vm.modbusWidgetValidation">\n\n  <p ng-if="vm.categoriesConfig.length > 0 && !vm.atLeastOneElementSelected" class="has-error" style="margin-top:20px">\n    <span class="help-block" style="display:inline-block">\n      <i c8y-icon="exclamation-triangle"></i>\n      <span translate>At least one field needs to be selected.</span>\n    </span>\n  </p>\n</ng-form>\n',e.put("modbusWidget4/widget-config.html",n),e.put("core_modbusWidget4/widget-config.html",n),e.put("/apps/core/modbusWidget4/widget-config.html",n),n='<div class="widget-modbus" ng-init="wgtId = \'w\' + $id">\n  <div class="card-block" ng-repeat="category in vm.categories" ng-if="category.elements.length > 0" ng-init="catId = \'c\' + $index">\n    <div class="legend form-block" ng-if="category.name">\n      {{category.label}}\n    </div>\n    <div ng-repeat="element in category.elements" ng-init="eltId = \'e\' + $index">\n      <div class="modbus-category form-group">\n        <label for="{{wgtId + \'_\' + catId + \'_\' + eltId}}" ng-class="{\'notEditable\': !vm.canUpdateElement(vm.device, element)}" title="{{element.name}}">\n          {{element.label}}\n        </label>\n\n        <i class="fa-spin" c8y-icon="circle-o-notch" ng-style="{visibility: vm.isElementChangePending(element) ? \'initial\' : \'hidden\'}">\n        </i>\n\n        <div class="form-group" ng-if="vm.shouldShowSwitch(element)">\n          <button type="button" class="btn btn-default" ng-disabled="!vm.canUpdateElement(vm.device, element) || vm.isElementChangePending(element)" uib-btn-checkbox btn-checkbox-true="element.meta.enumValues[1]" btn-checkbox-false="element.meta.enumValues[0]" ng-model="element.valueObj" ng-change="vm.updateElement(vm.device, element, element.valueObj)" title="{{element.valueObj.label}}" style="z-index:2">\n            <span ng-bind="element.valueObj.label"></span>\n          </button>\n        </div>\n\n        <form ng-if="vm.shouldShowEnumSelect(element) || vm.shouldShowNumberInput(element)" name="vm.elementValueForm" ng-submit="vm.updateElement(vm.device, element, element.valueObj)" novalidate>\n          <div ng-if="vm.shouldShowEnumSelect(element)" class="c8y-select-wrapper">\n            <select class="form-control" id="{{wgtId + \'_\' + catId + \'_\' + eltId}}" name="selectInput" ng-model="element.valueObj" ng-change="vm.updateElement(vm.device, element, element.valueObj)" ng-options="enumValue as enumValue.label for enumValue in element.meta.enumValues" ng-required="vm.shouldShowEnumSelect(element)" ng-disabled="vm.isElementChangePending(element) || !vm.canUpdateElement(vm.device, element)" ng-focus="vm.focus(element)" ng-blur="vm.blur(element)">\n            </select>\n            <span></span>\n          </div>\n          <div ng-if="vm.shouldShowNumberInput(element)" class="input-group" ng-class="{\'has-error\': vm.elementValueForm.numberInput.$dirty && vm.elementValueForm.numberInput.$invalid}" style="width:100%" uib-tooltip="{{vm.validationHints(vm.elementValueForm.numberInput, element)}}" tooltip-append-to-body="true">\n            <input type="number" class="form-control text-right" id="{{wgtId + \'_\' + catId + \'_\' + eltId}}" name="numberInput" ng-class="{\'input-border\': vm.canUpdateElement(vm.device, element)}" validate-value-in-register-range="element.meta.valuesRange.custom" placeholder="{{\'e.g.\' | translate}} {{element.meta.valuesRange.custom.min}}" ng-required="vm.canUpdateElement(vm.device, element) && vm.shouldShowNumberInput(element)" ng-disabled="!vm.canUpdateElement(vm.device, element) || vm.isElementChangePending(element)" ng-model="element.valueObj.value" min="{{element.meta.valuesRange.custom.min}}" max="{{element.meta.valuesRange.custom.max}}" step="{{element.meta.valuesRange.custom.step}}" ng-focus="vm.focus(element)" ng-blur="vm.blur(element)">\n            <span ng-if="vm.shouldShowNumberInput(element) && element.unit" class="input-group-addon" title="{{element.unit}}" ng-bind="element.unit">\n            </span>\n            <span ng-if="vm.canUpdateElement(vm.device, element)" class="input-group-btn">\n              <button class="btn btn-primary" ng-disabled="vm.isElementChangePending(element) || !vm.canUpdateElement(vm.device, element) || vm.elementValueForm.$invalid" translate>\n                Set\n              </button>\n            </span>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n',e.put("modbusWidget4/widget.html",n),e.put("core_modbusWidget4/widget.html",n),e.put("/apps/core/modbusWidget4/widget.html",n)}angular.module("c8y.modbusWidget4").run(["$templateCache",e])}();