/* core_deviceDatabase 9.12.5 2018-08-27T16:53:59+00:00 b689bea882f7+ (release/9.12.0) tip */
!function(){"use strict";angular.module("c8y.deviceDatabase",[]).constant("deviceDatabasePath","core_deviceDatabase")}(),angular.module("c8y.deviceDatabase").controller("deviceTypesListCtrl",["$scope","$location","c8yInventory","c8yDeviceDatabase","c8yTitle","c8yModal","c8yAlert",function(e,t,n,a,i,r,s){"use strict";function l(){o(),c().then(u)}function o(){i.changeTitle({title:"Device Database"})}function c(){return a.getAvailableDeviceTypes()}function u(t){e.deviceTypes||(e.deviceTypes=[]),_.forEach(t,function(t){e.deviceTypes.push(t)}),e.paging=t.paging}function d(){e.deviceTypes=null,e.refreshLoading=!0,e.paging.refresh().then(u).finally(function(){e.refreshLoading=!1}),e.paging=null}function m(t){e.paging.loading=!0;var n=t?c({pageSize:t}):e.paging.next().then(u);n.finally(function(){e.paging.loading=!1})}function p(e){var n=e&&e.id||"new";t.path("/device-types/"+n)}function g(){p()}function v(t){r({title:"Confirm delete?",body:'Do you really want to remove device type "'+t.name+'"? Connected devices of this type will become unavailable.',status:"danger"}).then(angular.bind(n,n.remove,t)).then(_.partial(_.pull,e.deviceTypes,t)).then(_.partial(s.success,"Device type successfully removed!"))}e.refresh=d,e.loadNext=m,e.navigateToDetails=p,e.addDeviceType=g,e.onClickDelete=v,l()}]),angular.module("c8y.deviceDatabase").controller("deviceTypeDetailsCtrl",["$scope","$routeParams","$q","$location","c8yBase","c8yInventory","c8yDeviceDatabase","c8yTitle","c8yModal","c8yAlert",function(e,t,n,a,i,r,s,l,o,c){"use strict";function u(){return"new"===B}function d(){m(B).then(g).then(v).then(b)}function m(e){return u()?n.when(p()):r.detail(e).then(i.getResData).then(s.upgradeDeviceType)}function p(){return{name:null,type:k,c8y_Coils:[],c8y_Registers:[]}}function g(t){e.deviceType=t}function v(){e.coilCategories=_.groupBy(e.deviceType.c8y_Coils,y),e.registerCategories=_.groupBy(e.deviceType.c8y_Registers,y)}function y(e){return e.category||""}function b(){l.changeTitle({title:e.deviceType.name||"New device type"})}function f(t){return T("coil",t,e.deviceType.c8y_Coils)}function h(t){return T("register",t,e.deviceType.c8y_Registers)}function T(e,t,n){var a={templateUrl:"core_deviceDatabase/views/"+e+"Modal.html",controller:e+"ModalCtrl",title:t&&t.name||"New "+e,resolve:M(e,t,n)};return o(a).then(_.partial(x,t,n)).then(v)}function M(e,t,n){var a={};return a[e]=_.partial(_.cloneDeep,S(t)),a[e+"sExisting"]=_.partial(_.cloneDeep,n),a.categoriesExisting=_.partial(_.cloneDeep,w()),a}function S(e){if(e)return _.assign(e,{meta:{originalNumber:e.number,originalStartBit:e.startBit}})}function w(){var t=[].concat(e.deviceType.c8y_Coils).concat(e.deviceType.c8y_Registers);return _(t).filter("category").map("category").uniq().map(D).value()}function D(e){return{name:e}}function x(e,t,n){if(e){var a=_.indexOf(t,e);t.splice(a,1,n)}else t.push(n)}function E(t){return R("coil",t,e.deviceType.c8y_Coils)}function V(t){return R("register",t,e.deviceType.c8y_Registers)}function R(e,t,n){return o({title:"Confirm delete?",body:"Do you really want to remove "+e+' "'+t.name+'"?',status:"danger"}).then(angular.bind(i,i.removeFromList,n,t)).then(v)}function C(e){s.save(e).then(_.partial(c.success,"Device type saved successfully!")).then(angular.bind(a,a.path,"/device-types"))}var B=t.deviceTypeId,k="c8y_ModbusDeviceType";e.isNew=u,e.save=C,e.addCoil=e.editCoil=f,e.addRegister=e.editRegister=h,e.removeCoil=E,e.removeRegister=V,d()}]),angular.module("c8y.deviceDatabase").controller("coilModalCtrl",["$scope","$uibModalInstance","$q","c8yBase","c8yDeviceDatabase","c8yAlarms","coil","coilsExisting","categoriesExisting",function(e,t,n,a,i,r,s,l,o){"use strict";function c(){u().then(i.addCoilMeta).then(m).then(p)}function u(){return s=s||d(),n.when(s)}function d(){return{}}function m(t){e.coil=t}function p(){e.categories=o}function g(e){t.close(i.removeCoilMeta(e))}function v(){e.coil.meta.updateStatus&&(e.coil.meta.showStatus=!0)}function y(t){if("number"===t){var n=e.forms[h][t],i=s&&s.meta,r=!_.isUndefined(n.$modelValue)&&_.some(l,function(e){return(!i||i.originalNumber!==e.number)&&e.number===n.$modelValue});n.$setValidity(M.NUMBER_IN_USE,!r)}return a.invalid(e.forms,h,t)}function b(t){var n=[];return e.forms[h][t]&&e.forms[h][t].$error&&_.forEach(e.forms[h][t].$error,function(e,t){e&&n.push(S[t])}),n.join(" ")}function f(){s&&(s.meta=s.meta||{},s.meta.showStatus?s.meta.enumValues||(s.meta.enumType=!0,s.meta.enumValues=_.clone(T.meta.enumValues)):(s.meta.enumType=!1,s.meta.enumValues=void 0))}e.forms={};var h="coil",T=i.Defaults.coil,M={IS_REQUIRED:"required",NUMBER_IN_USE:"number-in-use"},S={};S[M.IS_REQUIRED]="This field is required!",S[M.NUMBER_IN_USE]="This coil number is already assigned to another coil!",e.alarmSeverities=r.severityList,e.save=g,e.dismiss=t.dismiss,e.invalid=y,e.getFieldValidationHints=b,e.onUpdateStatusCheckboxClicked=v,e.$watch("coil.meta.showStatus",f),c()}]),angular.module("c8y.deviceDatabase").controller("registerModalCtrl",["$scope","$uibModalInstance","$q","c8yBase","c8yDeviceDatabase","c8yAlarms","register","registersExisting","categoriesExisting",function(e,t,n,a,i,r,s,l,o){"use strict";function c(){u().then(i.addRegisterMeta).then(m).then(p)}function u(){return n.when(s||d())}function d(){return{name:null,number:null,multiplier:S.multiplier,divisor:S.divisor,decimalPlaces:S.decimalPlaces,startBit:S.startBit,noBits:S.noBits,unit:S.unit,signed:S.signed}}function m(t){e.register=t}function p(){e.categories=o}function g(e){e.meta.enumValues=e.meta.enumValues||[],e.meta.enumValues.push({value:null,label:null})}function v(e,t){e.meta.enumValues=_.without(e.meta.enumValues,t)}function y(e){t.close(i.removeRegisterMeta(e))}function b(){e.register.meta.updateStatus&&(e.register.meta.showStatus=!0)}function f(t){return h(),a.invalid(e.forms,M,t)}function h(){var t=e.forms[M].number,n=e.forms[M].startBit,a=s&&s.meta,i=!(!_.isUndefined(t.$modelValue)&&!_.isUndefined(n.$modelValue)&&_.some(l,function(e){return(!a||a.originalNumber!==e.number&&a.originalStartBit!==e.startBit)&&e.number===t.$modelValue&&e.startBit===n.$modelValue}));t.$setValidity(w.NUMBER_AND_START_BIT_IN_USE,i),n.$setValidity(w.NUMBER_AND_START_BIT_IN_USE,i)}function T(t){var n=[];return e.forms[M][t]&&e.forms[M][t].$error&&_.forEach(e.forms[M][t].$error,function(e,t){e&&n.push(D[t])}),n.join(" ")}e.forms={};var M="register",S=i.Defaults.register,w={IS_REQUIRED:"required",NUMBER_AND_START_BIT_IN_USE:"number-and-start-bit-in-use"},D={};D[w.IS_REQUIRED]="This field is required!",D[w.NUMBER_AND_START_BIT_IN_USE]="This register number and start bit are already assigned to another register!",e.alarmSeverities=r.severityList,e.addEnumValue=g,e.removeEnumValue=v,e.save=y,e.dismiss=t.dismiss,e.invalid=f,e.getFieldValidationHints=T,e.onUpdateStatusCheckboxClicked=b,c()}]),function(){"use strict";function e(e,t,n,a){function i(){return n.list({type:"c8y_ModbusDeviceType",pageSize:1e3})}function r(a){var i=e.when(null);if(a&&a.c8y_ModbusDevice&&a.c8y_ModbusDevice.type){var r=/\/inventory\/managedObjects\/(\d+)/.exec(a.c8y_ModbusDevice.type)[1];i=n.detail(r).then(t.getResData).then(N)}return i}function s(a){var i,r;return i=e.when(a).then(o).then(c),r=a.id?i.then(n.save):i.then(n.createConfirm).then(t.getResData).then(l)}function l(e){a.createIdentity(e,{type:"c8y_SmartRestDeviceIdentifier",externalId:e.name})}function o(t){return t.c8y_Coils=_.sortBy(t.c8y_Coils,"number"),t.c8y_Registers=_.sortBy(t.c8y_Registers,function(e){return 100*e.number+e.startBit}),e.when(t)}function c(t){return t.com_cumulocity_model_smartrest_SmartRestTemplate=u(t),e.when(t)}function u(e){var t=[],n=[];return t.push(d(e)),t.push(m(e)),t.push(v(e)),t.push(b(e)),n.push(C(e)),n.push(B(e)),n.push(k(e)),n.push(I(e)),{requestTemplates:_.flattenDeep(t),responseTemplates:_.flattenDeep(n)}}function d(e){return{msgId:100,method:"PUT",contentType:"application/vnd.com.nsn.cumulocity.managedObject+json",placeholder:ge,resourceUri:"/inventory/managedObjects/"+ge,templateString:$({c8y_CoilStatus:p(e.c8y_Coils).map(function(e){var t={};return t[e.name]=ge,t}).reduce(function(e,t){return _.assign(e,t)},{}).value()}),values:["UNSIGNED"].concat(p(e.c8y_Coils).map(function(e){return"UNSIGNED"}).value())}}function m(e){return{msgId:101,method:"PUT",contentType:"application/vnd.com.nsn.cumulocity.managedObject+json",placeholder:ge,resourceUri:"/inventory/managedObjects/"+ge,templateString:$({c8y_RegisterStatus:p(e.c8y_Registers).map(function(e){var t={};return t[e.name]=ge,t}).reduce(function(e,t){return _.assign(e,t)},{}).value()}),values:["UNSIGNED"].concat(p(e.c8y_Registers).map(function(e){return"NUMBER"}).value())}}function p(e){return _(e).filter(g).sortBy("number")}function g(e){return e.statusMapping&&e.statusMapping.status}function v(e){var t=[];return t.push(y(102,"EXECUTING")),t.push(y(103,"SUCCESSFUL")),t.push(y(104,"FAILED")),t}function y(e,t){return{msgId:e,method:"PUT",contentType:"application/vnd.com.nsn.cumulocity.operation+json",placeholder:ge,resourceUri:"/devicecontrol/operations/"+ge,templateString:$({status:t}),values:["UNSIGNED"]}}function b(e){var t,n,a,i=[],r=300;return t=f(r,e),i.push(t.tpls),n=S(t.msgId,e),i.push(n.tpls),a=V(n.msgId,e),i.push(a.tpls),i}function f(e,t){var n=[],a=_.filter(t.c8y_Coils,"alarmMapping"),i=_.filter(t.c8y_Registers,"alarmMapping");return _.forEach(a,function(a){n.push(M(e,t,a.alarmMapping,h(a))),a.alarmMapping.raiseAlarmTemplate=e++}),_.forEach(i,function(a){n.push(M(e,t,a.alarmMapping,T(a))),a.alarmMapping.raiseAlarmTemplate=e++}),{msgId:e,tpls:n}}function h(e){return{c8y_ModbusSource:{coil:_.pick(e,"number")}}}function T(e){return{c8y_ModbusSource:{register:_.pick(e,["number","startBit","noBits"])}}}function M(e,t,n,a){return{msgId:e,method:"POST",contentType:"application/vnd.com.nsn.cumulocity.alarm+json",accept:"application/vnd.com.nsn.cumulocity.alarm+json",placeholder:ge,resourceUri:"/alarm/alarms",templateString:$([{key:"source",value:{id:ge}},{key:"type",value:n.type},{key:"status",value:"ACTIVE"},{key:"severity",value:n.severity},{key:"time",value:ge},{key:"text",value:n.text},{key:"c8y_ModbusSource",value:a.c8y_ModbusSource}]),values:["UNSIGNED",E(t)]}}function S(e,t){var n=[],a=[].concat(t.c8y_Coils).concat(t.c8y_Registers),i=_(a).sortBy("number").filter("measurementMapping").groupBy(w).value();return _.forEach(i,function(a,i){var r=_.map(a,D);n.push(x(e,t,i,r)),_.forEach(r,function(t){t.sendMeasurementTemplate=e,delete t.unit}),e++}),{msgId:e,tpls:n}}function w(e){return e.measurementMapping.type}function D(e){return e.measurementMapping.unit=e.unit||e.measurementMapping.unit,e.measurementMapping}function x(e,t,n,a){return{msgId:e,method:"POST",contentType:"application/vnd.com.nsn.cumulocity.measurement+json",placeholder:ge,resourceUri:"/measurement/measurements",templateString:$(function(){var e=n,t={source:{id:ge},time:ge,type:e};return t[e]={},_.forEach(a,function(n){t[e][n.series]={value:"%n",unit:n.unit}}),t}()),values:["UNSIGNED",E(t)].concat(_.map(a,function(e){return"NUMBER"}))}}function E(e){var t="DATE";return e.c8y_useServerTime&&(t="NOW"),t}function V(e,t){var n=[],a=[].concat(t.c8y_Coils).concat(t.c8y_Registers);return _.forEach(a,function(a){_.isUndefined(a.eventMapping)||(n.push(R(e,t,a,a.eventMapping)),a.eventMapping.eventTemplate=e++)}),{msgId:e,tpls:n}}function R(e,t,n,a){return{msgId:e,method:"POST",contentType:"application/vnd.com.nsn.cumulocity.event+json",placeholder:ge,resourceUri:"/event/events",templateString:$([{key:"source",value:{id:ge}},{key:"time",value:ge},{key:"type",value:a.type},{key:"text",value:a.text},{key:n.name,value:ge}]),values:["UNSIGNED",E(t),"STRING"]}}function C(e){return{msgId:200,condition:"$.c8y_SetCoil",pattern:["$.id","$.c8y_SetCoil.address","$.c8y_SetCoil.coil","$.c8y_SetCoil.value"]}}function B(e){return{msgId:201,condition:"$.c8y_SetRegister",pattern:["$.id","$.c8y_SetRegister.ipAddress","$.c8y_SetRegister.address","$.c8y_SetRegister.register","$.c8y_SetRegister.startBit","$.c8y_SetRegister.noBits","$.c8y_SetRegister.value"]}}function k(e){return{msgId:202,condition:"$.c8y_ModbusDevice",pattern:["$.id","$.deviceId","$.c8y_ModbusDevice.address","$.c8y_ModbusDevice.type"]}}function I(e){return{msgId:203,condition:"$.c8y_ModbusSource",pattern:["$.id"]}}function $(e,t){var n;return _.isArray(e)?n=U(e):_.isObjectLike(e)&&(n=angular.toJson(e)),t=t||ge,n=n.replace(/"%n"/g,t)}function U(e){var t=_.map(e,A);return"{"+t.join(",")+"}"}function A(e){var t,n={};return n[e.key]=e.value,t=angular.toJson(n),t=t.substr(1,t.length-2)}function N(e){return e=F(e),e=q(e)}function F(e){return _.forEach(e.c8y_Coils,function(e){!e.enumValues&&e.statusMapping&&_.isArray(e.statusMapping.enumValues)&&(e.enumValues={0:e.statusMapping.enumValues[0],1:e.statusMapping.enumValues[1]},delete e.statusMapping.enumValues)}),e}function q(e){return _.forEach(e.c8y_Registers,function(e){e.startBit=e.startBit||ve.register.startBit,e.noBits=e.noBits||ve.register.noBits,!e.unit&&e.measurementMapping&&e.measurementMapping.unit&&(e.unit=e.measurementMapping.unit,delete e.measurementMapping.unit)}),e}function O(e){return e.meta=e.meta||{},e=H(e),e=L(e),e=j(e),e=G(e),e=z(e)}function H(e){return e.meta.type=e.meta.type||pe.COIL,e}function L(e){return e.meta.enumType=e.meta.enumType||!!e.enumValues,e.meta.enumValues=e.meta.enumValues||e.enumValues&&_.map(e.enumValues,P),e}function P(e,t){return{value:parseFloat(t),label:e}}function j(e){return e.meta.showStatus=e.meta.showStatus||!(!e.statusMapping||"read"!==e.statusMapping.status&&"write"!==e.statusMapping.status),e.meta.updateStatus=e.meta.updateStatus||!(!e.statusMapping||"write"!==e.statusMapping.status),e}function G(e){return e.meta.raiseAlarm=e.meta.raiseAlarm||!(!e.alarmMapping||_.isUndefined(e.alarmMapping.raiseAlarmTemplate)),e}function z(e){return e.meta.sendEvent=e.meta.sendEvent||!(!e.eventMapping||_.isUndefined(e.eventMapping.eventTemplate)),e}function Q(e){return e.meta&&(e=J(e),e=K(e),e=W(e),e=X(e),e=Y(e),delete e.meta),e}function J(e){return e.meta.type=void 0,e}function K(e){return e.meta.enumType?(e.enumValues={},_.forEach(e.meta.enumValues,function(t){e.enumValues[t.value]=t.label})):e.enumValues=void 0,e}function W(e){return e.meta.showStatus||e.meta.updateStatus?(e.statusMapping=e.statusMapping||{},e.meta.showStatus&&(e.statusMapping.status="read"),e.meta.updateStatus&&(e.statusMapping.status="write")):e.statusMapping=void 0,e}function X(e){return e.meta.raiseAlarm?(e.alarmMapping=e.alarmMapping||{},e.alarmMapping.raiseAlarmTemplate=null):e.alarmMapping=void 0,e}function Y(e){return e.meta.sendEvent?(e.eventMapping=e.eventMapping||{},e.eventMapping.eventTemplate=null):e.eventMapping=void 0,e}function Z(e){return e.meta=e.meta||{},e=ee(e),e=te(e),e=ne(e),e=ae(e),e=ie(e),e=re(e)}function ee(e){return e.meta.type=e.meta.type||pe.REGISTER,e}function te(e){return e.meta.enumType=e.meta.enumType||!!e.enumValues,e.meta.enumValues=e.meta.enumValues||e.enumValues&&_.map(e.enumValues,P),e}function ne(e){return e.meta.showStatus=e.meta.showStatus||!(!e.statusMapping||"read"!==e.statusMapping.status&&"write"!==e.statusMapping.status),e.meta.updateStatus=e.meta.updateStatus||!(!e.statusMapping||"write"!==e.statusMapping.status),e}function ae(e){return e.meta.sendMeasurement=e.meta.sendMeasurement||!(!e.measurementMapping||_.isUndefined(e.measurementMapping.sendMeasurementTemplate)),e}function ie(e){return e.meta.raiseAlarm=e.meta.raiseAlarm||!(!e.alarmMapping||_.isUndefined(e.alarmMapping.raiseAlarmTemplate)),e}function re(e){return e.meta.sendEvent=e.meta.sendEvent||!(!e.eventMapping||_.isUndefined(e.eventMapping.eventTemplate)),e}function se(e){return e.meta&&(e.meta=e.meta||{},e=le(e),e=oe(e),e=ce(e),e=ue(e),e=de(e),e=me(e),delete e.meta),e}function le(e){return e.meta.type=void 0,e}function oe(e){return e.meta.enumType?(e.enumValues={},_.forEach(e.meta.enumValues,function(t){e.enumValues[t.value]=t.label})):e.enumValues=void 0,e}function ce(e){return e.meta.showStatus||e.meta.updateStatus?(e.statusMapping=e.statusMapping||{},e.meta.showStatus&&(e.statusMapping.status="read"),e.meta.updateStatus&&(e.statusMapping.status="write")):e.statusMapping=void 0,e}function ue(e){return e.meta.sendMeasurement?(e.measurementMapping=e.measurementMapping||{},e.measurementMapping.sendMeasurementTemplate=null):e.measurementMapping=void 0,e}function de(e){return e.meta.raiseAlarm?(e.alarmMapping=e.alarmMapping||{},e.alarmMapping.raiseAlarmTemplate=null):e.alarmMapping=void 0,e}function me(e){return e.meta.sendEvent?(e.eventMapping=e.eventMapping||{},e.eventMapping.eventTemplate=null):e.eventMapping=void 0,e}var pe=t.createEnum(["COIL","REGISTER"]),ge="%%",ve={coil:{meta:{enumValues:[{value:0,label:"0"},{value:1,label:"1"}]}},register:{multiplier:1,divisor:1,decimalPlaces:0,startBit:0,noBits:16,unit:"",signed:!1}};return{ElementType:pe,Defaults:ve,getAvailableDeviceTypes:i,getDeviceTypeFromDevice:r,save:s,upgradeDeviceType:N,addCoilMeta:O,removeCoilMeta:Q,addRegisterMeta:Z,removeRegisterMeta:se}}angular.module("c8y.deviceDatabase").factory("c8yDeviceDatabase",["$q","c8yBase","c8yInventory","c8yIdentity",e])}(),function(){"use strict";function e(e,t,n,a,i,r,s){function l(e,n){var i=o(e,n),s=i.then(a.createConfirm).then(t.getResData),l=s.then(_.partial(a.addChildDevice,e)),d=l.then(function(){return s.then(_.partialRight(c,e.owner)).then(a.save)}),m=d.then(function(){return s.then(_.partial(u,e,n)).then(r.create)});return m}function o(e,t){var a={name:t.name,type:"c8y_ModbusDevice",c8y_ModbusDevice:{address:t.address,ipAddress:t.ipAddress,type:"/inventory/managedObjects/"+t.deviceType.id}};return n.current().then(function(e){return a.owner=e.id,a})}function c(e,t){return e.owner=t,e}function u(e,t){return{deviceId:e.id,description:"Added new child device to "+e.name+" ("+e.id+")",c8y_ModbusDevice:{name:t.name,address:t.address,ipAddress:t.ipAddress,type:"/inventory/managedObjects/"+t.deviceType.id}}}function d(e,t){return!(!t.statusMapping||"write"!==t.statusMapping.status)}function m(e){return e.changePending}function p(e,t){var n=T[t.meta.type.value];return e&&e[n]&&parseFloat(e[n][t.name])}function g(t,n,a){if(d(t,n)){var i=v(t,n,a);return n.changePending=!0,f(i).then(function(e){return e.status===r.status.SUCCESSFUL?(h(t,n,a),n.changePending=!1):e.status===r.status.FAILED&&(n.changePending=!1),e})}return e.reject()}function v(e,t,n){var a;return t.meta.type===i.ElementType.COIL?a=y(e,t,n):t.meta.type===i.ElementType.REGISTER&&(a=b(e,t,n)),a}function y(e,t,n){return{deviceId:e.id,description:t.name+" status changed to "+n.label,c8y_SetCoil:{address:e.c8y_ModbusDevice.address,coil:t.number,value:n.value}}}function b(e,t,n){return{deviceId:e.id,description:t.name+" value changed to "+(n.label||n.value)+(!n.label&&t.unit?" "+t.unit:""),c8y_SetRegister:{ipAddress:e.c8y_ModbusDevice.ipAddress,address:e.c8y_ModbusDevice.address,register:t.number,startBit:t.startBit,noBits:t.noBits,value:n.value}}}function f(e){return r.createWithNotifications(e).then(function(t){return t.created.then(_.partial(s.success,'Operation "'+e.description+'" has been created!')),t.completed.then(function(t){return t.status===r.status.SUCCESSFUL?s.success('Operation "'+e.description+'" has been completed successfully!'):t.status===r.status.FAILED&&s.danger('Operation "'+e.description+'" has failed!'),t})})}function h(e,t,n){t.meta.type===i.ElementType.COIL?(e.c8y_CoilStatus=e.c8y_CoilStatus||{},e.c8y_CoilStatus[t.name]=n.value):t.meta.type===i.ElementType.REGISTER&&(e.c8y_RegisterStatus=e.c8y_RegisterStatus||{},e.c8y_RegisterStatus[t.name]=n.value)}var T={};return T[i.ElementType.COIL.value]="c8y_CoilStatus",T[i.ElementType.REGISTER.value]="c8y_RegisterStatus",{create:l,canUpdateElement:d,isElementChangePending:m,getCurrentElementValue:p,updateElement:g}}angular.module("c8y.deviceDatabase").factory("c8yModbusDevice",["$q","c8yBase","c8yUser","c8yDevices","c8yDeviceDatabase","c8yDeviceControl","c8yAlert",e])}(),function(){"use strict";function e(){return{restrict:"A",require:"ngModel",scope:{list:"=uniqueInArray",propName:"@uniquePropName"},link:function(e,t,n,a){function i(){var t,n={};n[e.propName]=a.$modelValue,t=!(e.list&&_.filter(e.list,n).length>1),a.$setValidity("unique",t)}e.$watch("list",i),e.$watch("propName",i),e.$watch(function(){return a.$modelValue},i)}}}angular.module("c8y.deviceDatabase").directive("unique",e)}(),function(){"use strict";function e(e){var t;t='<div class="modal-header" ng-show="title">\n  <h3>{{title}}</h3>\n</div>\n<div class="modal-body">\n  <form role="form" name="forms.coil" class="panel-body" novalidate ng-show="coil">\n    <div class="row">\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'name\')}" uib-tooltip="{{getFieldValidationHints(\'name\')}}">\n        <label for="name">Name</label>\n        <input type="text" class="form-control" id="name" name="name" ng-model="coil.name" placeholder="{{\'e.g. Door sensor\' | translate}}" required>\n      </div>\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'category\')}" uib-tooltip="{{getFieldValidationHints(\'category\')}}">\n        <label for="category">Display category</label>\n        <input type="text" class="form-control" id="category" name="category" ng-model="coil.category" uib-typeahead="category.name for category in categories | filter:{name:$viewValue}">\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'number\')}" uib-tooltip="{{getFieldValidationHints(\'number\')}}">\n        <label for="number">Number</label>\n        <input type="number" class="form-control" id="number" name="number" ng-model="coil.number" min="0" max="65535" step="1" placeholder="{{\'e.g.\' | translate}} 1234" required>\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-6">\n        <label>Functionalities</label>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="coil.meta.showStatus" ng-disabled="coil.meta.updateStatus"> Show status (read-only access)\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="coil.meta.updateStatus" ng-change="onUpdateStatusCheckboxClicked()"> Update status (read/write access)\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="coil.meta.raiseAlarm"> Raise alarm\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="coil.meta.sendEvent"> Send event\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class="row">\n      <div ng-show="coil.meta.showStatus" ng-repeat="enumValue in coil.meta.enumValues | limitTo:2">\n        <ng-form name="nestedEnumValueValueForm">\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': nestedEnumValueValueForm.$dirty && nestedEnumValueValueForm.$invalid}">\n            <div ng-if="enumValue.value === 0">\n              <label translate>Text to show if coil is zero</label>\n              <input type="text" class="form-control" ng-model="enumValue.label" placeholder="{{\'e.g. Off\' | translate}}" ng-required="coil.meta.showStatus">\n            </div>\n            <div ng-if="enumValue.value === 1">\n              <label translate>Text to show if coil is one</label>\n              <input type="text" class="form-control" ng-model="enumValue.label" placeholder="{{\'e.g. On\' | translate}}" ng-required="coil.meta.showStatus">\n            </div>\n          </div>\n        </ng-form>\n      </div>\n    </div>\n    <div class="row" ng-show="coil.meta.raiseAlarm">\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmType\')}" uib-tooltip="{{getFieldValidationHints(\'alarmType\')}}">\n        <label for="alarmType">Alarm type</label>\n        <input type="text" class="form-control" id="alarmType" name="alarmType" ng-model="coil.alarmMapping.type" placeholder="{{\'e.g.\' | translate}} c8y_DoorStatus" ng-required="coil.meta.raiseAlarm">\n      </div>\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmText\')}" uib-tooltip="{{getFieldValidationHints(\'alarmText\')}}">\n        <label for="alarmText">Alarm text</label>\n        <input type="text" class="form-control" id="alarmText" name="alarmText" ng-model="coil.alarmMapping.text" placeholder="{{\'e.g. Door opened\' | translate}}" ng-required="coil.meta.raiseAlarm">\n      </div>\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmSeverity\')}" uib-tooltip="{{getFieldValidationHints(\'alarmSeverity\')}}">\n        <label for="alarmSeverity">Alarm severity</label>\n        <select class="form-control" id="alarmSeverity" name="alarmSeverity" ng-model="coil.alarmMapping.severity" ng-options="p for p in alarmSeverities" ng-required="coil.meta.raiseAlarm"></select>\n      </div>\n    </div>\n    <div class="row" ng-show="coil.meta.sendEvent">\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'eventType\')}" uib-tooltip="{{getFieldValidationHints(\'evantType\')}}">\n        <label for="eventType">Event type</label>\n        <input type="text" class="form-control" id="eventType" name="eventType" ng-model="coil.eventMapping.type" placeholder="{{\'e.g.\' | translate}} c8y_DoorStatus" ng-required="coil.meta.sendEvent">\n      </div>\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'eventText\')}" uib-tooltip="{{getFieldValidationHints(\'eventText\')}}">\n        <label for="eventText">Event text</label>\n        <input type="text" class="form-control" id="eventText" name="eventText" ng-model="coil.eventMapping.text" placeholder="{{\'e.g. Door status changed\' | translate}}" ng-required="coil.meta.sendEvent">\n      </div>\n    </div>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-disabled="forms.coil.$invalid" ng-click="save(coil)">OK</button>\n  <button class="btn btn-default" ng-click="dismiss()">Close</button>\n</div>\n',e.put("deviceDatabase/views/coilModal.html",t),e.put("core_deviceDatabase/views/coilModal.html",t),e.put("/apps/core/deviceDatabase/views/coilModal.html",t),t='<div ng-controller="deviceTypeDetailsCtrl">\n  <form role="form" name="deviceTypeForm" class="panel-body device-type-form" novalidate ng-show="deviceType">\n    <div ng-include="\'core_deviceDatabase/views/detailsBasic.html\'"></div>\n    <div ng-include="\'core_deviceDatabase/views/detailsCoils.html\'"></div>\n    <div ng-include="\'core_deviceDatabase/views/detailsRegisters.html\'"></div>\n    <div ng-include="\'core_deviceDatabase/views/detailsOptions.html\'"></div>\n\n    <button class="btn btn-primary" ng-click="save(deviceType)" ng-disabled="deviceTypeForm.$invalid">Save</button>\n  </form>\n</div>\n',e.put("deviceDatabase/views/details.html",t),e.put("core_deviceDatabase/views/details.html",t),e.put("/apps/core/deviceDatabase/views/details.html",t),t='<div class="row">\n  <div class="form-group col-lg-4">\n    <label>Name</label>\n    <input type="text" class="form-control" ng-model="deviceType.name" ng-disabled="!isNew()" placeholder="{{\'e.g. My device\' | translate}}" required>\n  </div>\n</div>\n',e.put("deviceDatabase/views/detailsBasic.html",t),e.put("core_deviceDatabase/views/detailsBasic.html",t),e.put("/apps/core/deviceDatabase/views/detailsBasic.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="sliders"></i> Coils\n    <button class="btn btn-link pull-right" ng-click="addCoil()">\n      <i c8y-icon="plus"></i> Add coil\n    </button>\n  </div>\n  <div class="panel-body">\n    <div class="alert alert-warning" ng-show="deviceType.c8y_Coils.length == 0">\n      No coils defined.\n    </div>\n    <table class="table table-hover" ng-show="deviceType.c8y_Coils.length > 0">\n      <thead ng-repeat-start="(category, coils) in coilCategories">\n        <tr>\n          <th colspan="2" ng-class="{\'text-muted\':!category}">\n            {{category || \'Uncategorized\'}}\n          </th>\n        </tr>\n      </thead>\n      <tbody ng-repeat-end>\n        <tr ng-repeat="coil in coils | orderBy:\'number\'">\n          <td class="interact" ng-click="editCoil(coil)">\n            {{coil.name || \'-- coil name not defined --\'}}\n            <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n              <strong>Number:</strong> {{coil.number}}\n            </small>\n          </td>\n          <td class="text-right">\n            <button class="btn btn-danger btn-xs showOnHover" title="Remove coil" ng-click="removeCoil(coil)">\n              <i c8y-icon="times"></i>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n',e.put("deviceDatabase/views/detailsCoils.html",t),e.put("core_deviceDatabase/views/detailsCoils.html",t),e.put("/apps/core/deviceDatabase/views/detailsCoils.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="list"></i> Options\n  </div>\n  <div class="panel-body">\n    <div class="row">\n      <div class="form-group col-lg-12">\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" id="useServerTime" name="useServerTime" ng-model="deviceType.c8y_useServerTime"> Use server time\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',e.put("deviceDatabase/views/detailsOptions.html",t),e.put("core_deviceDatabase/views/detailsOptions.html",t),e.put("/apps/core/deviceDatabase/views/detailsOptions.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="tasks"></i> Registers\n    <button class="btn btn-link pull-right" ng-click="addRegister()">\n      <i c8y-icon="plus"></i> Add register\n    </button>\n  </div>\n  <div class="panel-body">\n    <div class="alert alert-warning" ng-show="deviceType.c8y_Registers.length === 0">\n      No registers defined.\n    </div>\n    <table class="table table-hover" ng-show="deviceType.c8y_Registers.length > 0">\n      <thead ng-repeat-start="(category, registers) in registerCategories">\n        <tr>\n          <th colspan="2" ng-class="{\'text-muted\':!category}">\n            {{category || \'Uncategorized\'}}\n          </th>\n        </tr>\n      </thead>\n      <tbody ng-repeat-end>\n        <tr ng-repeat="register in registers | orderBy:[\'number\',\'startBit\']">\n          <td class="interact" ng-click="editRegister(register)">\n            {{register.name || \'-- register name not defined --\'}}\n            <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n              <strong>Number:</strong> {{register.number}}\n            </small>\n            <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n              <strong>Start bit:</strong> {{register.startBit}}\n            </small>\n            <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n              <strong>Number of bits:</strong> {{register.noBits}}\n            </small>\n          </td>\n          <td class="text-right">\n            <button class="btn btn-danger btn-xs showOnHover" title="Remove register" ng-click="removeRegister(register)">\n              <i c8y-icon="times"></i>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n',e.put("deviceDatabase/views/detailsRegisters.html",t),e.put("core_deviceDatabase/views/detailsRegisters.html",t),e.put("/apps/core/deviceDatabase/views/detailsRegisters.html",t),t='<div ng-controller="deviceTypesListCtrl">\n\n  <div class="clearfix">\n    <c8y-refresh-btn class="pull-right" style="margin-bottom:20px"></c8y-refresh-btn>\n    <button class="btn btn-link pull-right" ng-click="addDeviceType()">\n      <i c8y-icon="plus"></i> Add device type\n    </button>\n  </div>\n\n  <div class="alert alert-warning" ng-show="deviceTypes.length === 0">\n    No device types found.\n  </div>\n\n  <table class="table table-hover" ng-show="deviceTypes.length > 0">\n    <tr ng-repeat="devType in deviceTypes">\n      <td class="interact" ng-click="navigateToDetails(devType)">\n        {{devType.name || "-- device type\'s name not defined --"}}\n      </td>\n      <td class="text-right">\n        <button class="btn btn-danger btn-xs showOnHover" title="Remove device type" ng-click="onClickDelete(devType)">\n          <i c8y-icon="times"></i>\n        </button>\n      </td>\n    </tr>\n  </table>\n\n  <c8y-load-more change-page-size></c8y-load-more>\n</div>\n',
e.put("deviceDatabase/views/list.html",t),e.put("core_deviceDatabase/views/list.html",t),e.put("/apps/core/deviceDatabase/views/list.html",t),t='<div class="modal-header" ng-show="title">\n  <h3>{{title}}</h3>\n</div>\n<div class="modal-body">\n  <form role="form" name="forms.register" class="panel-body" novalidate ng-show="register">\n    <div class="row">\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'name\')}" uib-tooltip="{{getFieldValidationHints(\'name\')}}">\n        <label for="name">Name</label>\n        <input type="text" class="form-control" id="name" name="name" ng-model="register.name" placeholder="{{\'e.g. Temperature\' | translate}}" required>\n      </div>\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'category\')}" uib-tooltip="{{getFieldValidationHints(\'category\')}}">\n        <label for="category">Display category</label>\n        <input type="text" class="form-control" id="category" name="category" ng-model="register.category" uib-typeahead="category.name for category in categories | filter:{name:$viewValue}">\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'number\')}" uib-tooltip="{{getFieldValidationHints(\'number\')}}">\n        <label for="number">Number</label>\n        <input type="number" class="form-control" id="number" name="number" ng-model="register.number" min="0" max="65535" step="1" placeholder="{{\'e.g.\' | translate}} 1234" required>\n      </div>\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'startBit\')}" uib-tooltip="{{getFieldValidationHints(\'startBit\')}}">\n        <label for="startBit">Start bit</label>\n        <input type="number" class="form-control" id="startBit" name="startBit" ng-model="register.startBit" min="0" max="15" step="1" placeholder="{{\'e.g.\' | translate}} 0" required>\n      </div>\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'noBits\')}" uib-tooltip="{{getFieldValidationHints(\'noBits\')}}">\n        <label for="noBits">Number of bits</label>\n        <input type="number" class="form-control" id="noBits" name="noBits" ng-model="register.noBits" min="1" max="{{16-register.startBit}}" step="1" placeholder="{{\'e.g.\' | translate}} 8" required>\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'multiplier\')}" uib-tooltip="{{getFieldValidationHints(\'multiplier\')}}">\n        <label for="name">Multiplier</label>\n        <input type="number" class="form-control" id="multiplier" name="multiplier" ng-model="register.multiplier" min="1" step="1" placeholder="{{\'e.g.\' | translate}} 1" required>\n      </div>\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'divisor\')}" uib-tooltip="{{getFieldValidationHints(\'divisor\')}}">\n        <label for="number">Divisor</label>\n        <input type="number" class="form-control" id="divisor" name="divisor" ng-model="register.divisor" min="1" step="1" placeholder="{{\'e.g.\' | translate}} 1" required>\n      </div>\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'decimalPlaces\')}" uib-tooltip="{{getFieldValidationHints(\'decimalPlaces\')}}">\n        <label for="decimalPlaces">Decimal places</label>\n        <input type="number" class="form-control" id="decimalPlaces" name="decimalPlaces" ng-model="register.decimalPlaces" min="0" max="5" step="1" placeholder="{{\'e.g.\' | translate}} 3" required>\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'unit\')}" uib-tooltip="{{getFieldValidationHints(\'unit\')}}">\n        <label for="unit">Unit</label>\n        <input type="text" class="form-control" id="unit" name="unit" ng-model="register.unit">\n      </div>\n      <div ng-show="register.meta.updateStatus" class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'min\')}" uib-tooltip="{{getFieldValidationHints(\'min\')}}">\n        <label for="min">Minimum</label>\n        <input type="number" class="form-control" id="min" name="min" ng-model="register.min">\n      </div>\n      <div ng-show="register.meta.updateStatus" class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'max\')}" uib-tooltip="{{getFieldValidationHints(\'max\')}}">\n        <label for="max">Maximum</label>\n        <input type="number" class="form-control" id="max" name="max" ng-model="register.max">\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-6">\n        <label>Options</label>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="register.signed"> Signed\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="register.meta.enumType"> Enumeration type\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class="row" ng-show="register.meta.enumType">\n      <div class="form-group col-lg-12">\n        <label>Enumeration values</label>\n        <div ng-repeat="enumValue in register.meta.enumValues">\n          <div class="row">\n            <ng-form name="nestedEnumValueValueForm">\n              <div class="form-group col-lg-4" ng-class="{\'has-error\': nestedEnumValueValueForm.$dirty && nestedEnumValueValueForm.$invalid}">\n                <input type="number" class="form-control" ng-model="enumValue.value" min="{{register.min}}" max="{{register.max}}" unique unique-in-array="register.meta.enumValues" unique-prop-name="value" placeholder="Value" uib-tooltip="Value" required/>\n              </div>\n            </ng-form>\n            <ng-form name="nestedEnumValueLabelForm">\n              <div class="form-group col-lg-4" ng-class="{\'has-error\': nestedEnumValueLabelForm.$dirty && nestedEnumValueLabelForm.$invalid}">\n                <input type="text" class="form-control" ng-model="enumValue.label" placeholder="Label" uib-tooltip="Label" required/>\n              </div>\n            </ng-form>\n            <a class="btn btn-link pull-right" ng-click="removeEnumValue(register, enumValue)">\n              <i c8y-icon="minus"></i> Remove value\n            </a>\n          </div>\n        </div>\n        <div class="row">\n          <a class="btn btn-link left" ng-click="addEnumValue(register)">\n            <i c8y-icon="plus"></i> Add value\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-6">\n        <label>Functionalities</label>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="register.meta.showStatus" ng-disabled="register.meta.updateStatus"> Show status (read-only access)\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="register.meta.updateStatus" ng-change="onUpdateStatusCheckboxClicked()"> Update status (read/write access)\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="register.meta.sendMeasurement"> Send measurement\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="register.meta.raiseAlarm"> Raise alarm\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="register.meta.sendEvent"> Send event\n          </label>\n        </div>\n      </div>\n    </div>\n    <div ng-show="register.meta.sendMeasurement">\n      <div class="row">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'measurementType\')}" uib-tooltip="{{getFieldValidationHints(\'measurementType\')}}">\n          <label for="measurementType">Measurement type</label>\n          <input type="text" class="form-control" id="measurementType" name="measurementType" ng-model="register.measurementMapping.type" placeholder="{{\'e.g.\' | translate}} c8y_Temperature" ng-required="register.meta.sendMeasurement">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'measurementSeries\')}" uib-tooltip="{{getFieldValidationHints(\'measurementSeries\')}}">\n          <label for="measurementSeries">Measurement series</label>\n          <input type="text" class="form-control" id="measurementSeries" name="measurementSeries" ng-model="register.measurementMapping.series" placeholder="{{\'e.g.\' | translate}} T" ng-required="register.meta.sendMeasurement">\n        </div>\n      </div>\n    </div>\n    <div ng-show="register.meta.raiseAlarm">\n      <div class="row">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmType\')}" uib-tooltip="{{getFieldValidationHints(\'alarmType\')}}">\n          <label for="alarmType">Alarm type</label>\n          <input type="text" class="form-control" id="alarmType" name="alarmType" ng-model="register.alarmMapping.type" placeholder="{{\'e.g.\' | translate}} c8y_HighTemperature" ng-required="register.meta.raiseAlarm">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmText\')}" uib-tooltip="{{getFieldValidationHints(\'alarmText\')}}">\n          <label for="alarmText">Alarm text</label>\n          <input type="text" class="form-control" id="alarmText" name="alarmText" ng-model="register.alarmMapping.text" placeholder="{{\'e.g. Temperature is high\' | translate}}" ng-required="register.meta.raiseAlarm">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmSeverity\')}" uib-tooltip="{{getFieldValidationHints(\'alarmSeverity\')}}">\n          <label for="alarmSeverity">Alarm severity</label>\n          <select class="form-control" id="alarmSeverity" name="alarmSeverity" ng-model="register.alarmMapping.severity" ng-options="p for p in alarmSeverities" placeholder="{{\'Select severity\' | translate}}" ng-required="register.meta.raiseAlarm"></select>\n        </div>\n      </div>\n    </div>\n    <div ng-show="register.meta.sendEvent">\n      <div class="row">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'eventType\')}" uib-tooltip="{{getFieldValidationHints(\'evantType\')}}">\n          <label for="eventType">Event type</label>\n          <input type="text" class="form-control" id="eventType" name="eventType" ng-model="register.eventMapping.type" placeholder="{{\'e.g.\' | translate}} c8y_TemperatureEvent" ng-required="register.meta.sendEvent">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'eventText\')}" uib-tooltip="{{getFieldValidationHints(\'eventText\')}}">\n          <label for="eventText">Event text</label>\n          <input type="text" class="form-control" id="eventText" name="eventText" ng-model="register.eventMapping.text" placeholder="{{\'e.g. Temperature value changed\' | translate}}" ng-required="register.meta.sendEvent">\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-disabled="forms.register.$invalid" ng-click="save(register)">OK</button>\n  <button class="btn btn-default" ng-click="dismiss()">Close</button>\n</div>\n',e.put("deviceDatabase/views/registerModal.html",t),e.put("core_deviceDatabase/views/registerModal.html",t),e.put("/apps/core/deviceDatabase/views/registerModal.html",t)}angular.module("c8y.deviceDatabase").run(["$templateCache",e])}();