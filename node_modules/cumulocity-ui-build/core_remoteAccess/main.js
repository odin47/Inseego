/* core_remoteAccess 9.12.5 2018-08-27T16:54:32+00:00 b689bea882f7+ (release/9.12.0) tip */
!function(){"use strict";function e(e){e.configBlock()}e.$inject=["c8yRemoteAccessUIProvider"],angular.module("c8y.remoteAccess",[]).config(e)}();var _extends=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e};!function(){"use strict";function e(e,n,t,o,s,r,a){function c(e){var o=u(e);return n.get(o).then(t.getResData)}function i(e,n){try{return d(e,n)}catch(t){return l(e,n)}}function l(e,o){var s=u(e);return n.post(s,o).then(t.getResData)}function d(e,o){var s=v(e,o);return n.put(s,o).then(t.getResData)}function m(e,o){var s=v(e,o);return n.get(s).then(t.getResData)}function p(e,t){var o=v(e,t);return n.delete(o)}function u(e){var n=[A,"devices",t.getId(e),"configurations"].join("/");return t.url(n)}function v(e,n){return[u(e),t.getId(n)].join("/")}function g(n,t){return e.all({host:y(),path:h(n,t),extraConnectionParams:f(n,t)}).then(function(e){var n=e.host,o=e.path,s=e.extraConnectionParams;return _extends({title:a.getString("Connected to: {{name}}",t),host:n,path:o},s)})}function f(e,n){return _.find(P.values(),{value:n.protocol}).extraConnectionParams}function h(e,n){return s.current().then(function(s){return b({deviceId:t.getId(e),configurationId:n.id,token:o.encodeToken(s.userName,o.getPassword(),s.tenant)})})}function b(e){return"service/remoteaccess/client/"+e.deviceId+"/configurations/"+e.configurationId+"?token="+e.token}function y(){var e=document.createElement("a");return s.current().then(function(n){return e.href=n.self,e.hostname})}function C(e){return n.head(u(e),{silentError:!0}).then(_.constant(!0),_.constant(!1))}var A="service/remoteaccess",E="127.0.0.1",w=t.createEnum([{name:"NONE",value:"NONE",label:r("No password")},{name:"USER_PASS",value:"USER_PASS",label:r("Username and password")},{name:"PASS_ONLY",value:"PASS_ONLY",label:r("Password only")},{name:"PUBLIC_PRIVATE_KEYS",value:"PUBLIC_PRIVATE_KEYS",label:r("Public / private keys")}]),P=t.createEnum([{name:"VNC",value:"VNC",label:r("VNC"),supportedCredentialsTypes:[w.NONE,w.PASS_ONLY],defaults:{host:E,port:5900},clientWindowPath:"core_remoteAccess/vncClient/vncClient.html",clientWindowParams:"top=0,left=0,location=no,menubar=no,toolbar=no,status=no,resizable=yes",extraConnectionParams:{encrypt:!0,true_color:!0,local_cursor:!1,viewport:!0,shared:!0,view_only:!1,disconnectTimeout:10,repeaterID:"",port:443,password:""}},{name:"TELNET",value:"TELNET",label:r("Telnet"),supportedCredentialsTypes:[w.NONE],defaults:{host:E,port:23},clientWindowPath:"core_remoteAccess/telnetClient/index.html",clientWindowParams:"top=75,left=75,height=600,width=1000,location=no,menubar=no,toolbar=no,status=no,resizable=no"}]);return{DEFAULT_HOST:E,PROTOCOLS:P,CREDENTIALS_TYPES:w,save:i,list:c,detail:m,remove:p,getConnectionParams:g,isMicroServiceAvailable:_.memoize(C)}}e.$inject=["$q","$http","c8yBase","c8yAuth","c8yUser","gettext","gettextCatalog"],angular.module("c8y.remoteAccess").factory("c8yRemoteAccess",e)}(),function(){"use strict";function e(e,n,t,o){function s(e){this.id=e.deviceId}function r(e,n,t,o){function s(){return t.detail(r).then(n.getResData).then(function(e){return t.supportsOperation(e,"c8y_RemoteAccessConnect")})}var r=e.deviceId;return s().then(function(e){return e&&o.isMicroServiceAvailable(r)})}function a(){c()}function c(){n.when("/"+d,m)}function i(e,n,t,s,r,a,c,i,l,d,m,p,u){function v(e){var n=[{label:"localhost",ipAddress:a.DEFAULT_HOST}];return g(e).then(function(e){var t=_.map(e,function(e){return{label:p.properName(e),ipAddress:p.getIPAddress(e)}});return _.filter(n.concat(t),"ipAddress")})}function g(e){return m.childDevices(e)}function f(e){return w(e).then(function(e){return a.list(e).then(function(n){return _.map(n,function(n){return{device:e,config:n}})})})}function h(e){var n=w(e).then(function(e){return c.open({size:"md",component:"c8yRemoteAccessEndpointModal",resolve:{rootDevice:_.constant(_.cloneDeep(e))}}).result}),t=function(e){return a.save(e.device,e.config)},s=function(){return l.success(o("Endpoint saved."))};return n.then(t).then(s)}function b(e){var n=w(e.device).then(function(n){return c.open({size:"md",component:"c8yRemoteAccessEndpointModal",resolve:{endpoint:_.constant(_.cloneDeep(e)),rootDevice:_.constant(_.cloneDeep(n))}}).result}),t=function(e){return a.save(e.device,e.config)},s=function(){return l.success(o("Endpoint saved."))};return n.then(t).then(s)}function y(e){var n={title:o("Confirm delete?"),body:u.getString('Do you really want to remove endpoint "{{config.name}}" from device "{{device.name}}"?',e),labels:{ok:o("Delete")},status:"danger"},t=i(n),s=function(){return a.remove(e.device,e.config)},r=function(){return l.success(o("Endpoint removed."))};return t.then(s).then(r)}function C(e){return a.getConnectionParams(e.device,e.config).then(function(n){var t="remoteConnection_"+e.device.id+"_"+e.config.id;s.localStorage.setItem(t,JSON.stringify(n));var o=a.PROTOCOLS.values(),r=_.find(o,{value:e.config.protocol}),c=r.clientWindowPath+"?paramsId="+t,i=s.open(c,t,r.clientWindowParams);return A(i,t,n),_.assign(n,{paramsId:t,clientWindow:i})})}function A(e,n,o){var r=t(function(){var a=void 0;try{a=JSON.parse(s.localStorage.getItem(n))}catch(e){a={}}_.assign(o,a),e.closed&&(t.cancel(r),s.localStorage.removeItem(n),o.status=void 0,o.clientWindow=void 0)},1e3)}function E(e){return _.includes(["localhost",a.DEFAULT_HOST],e.config.hostname)}function w(n){return _.isObjectLike(n)?e.when(n):m.detail(n).then(d.getResData)}return{getSuggestedIPAddresses:v,getChildDevices:g,getEndpoints:f,addEndpoint:h,editEndpoint:b,removeEndpoint:y,connectEndpoint:C,isLocalEndpoint:E}}s.$inject=["$routeParams"],r.$inject=["$routeParams","c8yBase","c8yDevices","c8yRemoteAccess"],i.$inject=["$q","$location","$interval","$window","c8yTitle","c8yRemoteAccess","$uibModal","c8yModal","c8yAlert","c8yBase","c8yInventory","c8yDevices","gettextCatalog"];var l="window-restore",d="device/:deviceId",m={name:o("Remote access"),icon:l,template:'<c8y-remote-access-endpoints-list device="vm.id"></c8y-remote-access-endpoints-list>',controllerAs:"vm",controller:s,showIf:r};return{$get:i,configBlock:a,hookViews:c}}e.$inject=["c8yNavigatorProvider","c8yViewsProvider","c8yTitleProvider","gettext"],angular.module("c8y.remoteAccess").provider("c8yRemoteAccessUI",e)}(),function(){"use strict";function e(e,n,t,o){function s(e){e.device&&e.device.currentValue&&r(e.device.currentValue)}function r(e){o.getEndpoints(e).then(a)}function a(e){u.endpoints=e}function c(e){var n=o.isLocalEndpoint(e)?"z":"a",t=e.config.name;return n+t}function i(){return o.addEndpoint(u.device).then(p)}function l(e){o.connectEndpoint(e).then(function(n){e.connection=n})}function d(e){o.editEndpoint(e).then(p)}function m(e){o.removeEndpoint(e).then(p)}function p(){r(u.device)}var u=this;_.assign(u,{$onChanges:s,endpointsOrderFn:c,addEndpoint:i,onConnect:l,onEdit:d,onRemove:m})}e.$inject=["$q","c8yBase","c8yInventory","c8yRemoteAccessUI"],angular.module("c8y.remoteAccess").component("c8yRemoteAccessEndpointsList",{bindings:{device:"<"},templateUrl:"core_remoteAccess/remoteAccessEndpointsList/remoteAccessEndpointsList.html",controller:e,controllerAs:"vm"})}(),function(){"use strict";function e(e,n,t){function o(){s(u.resolve.endpoint,u.resolve.rootDevice),r(u.resolve.rootDevice)}function s(e,n){v=_.get(e,"config.credentials.password"),g=_.get(e,"config.credentials.username"),u.passwordAlreadyExists=!_.isEmpty(v),u.usernameAlreadyExists=!_.isEmpty(g),"undefined"==typeof e?(u.selectedProtocol=u.protocols.VNC,u.selectedCredentialsType=u.selectedProtocol.supportedCredentialsTypes[0]):(u.selectedProtocol=_.find(u.protocols.values(),{value:e.config.protocol}),u.selectedCredentialsType=e.config.credentials.type?_.find(u.credentialsTypes.values(),{value:e.config.credentials.type}):u.selectedProtocol.supportedCredentialsTypes[0]),u.endpoint=_.defaults(e,{device:n,config:{hostname:u.selectedProtocol.defaults.host,port:u.selectedProtocol.defaults.port,protocol:u.selectedProtocol.value,credentialsType:u.selectedCredentialsType.value}}),u.usernameAlreadyExists&&(u.endpoint.config.username=g),c()}function r(e){n.getSuggestedIPAddresses(e).then(function(e){u.suggestedIPAddresses=e})}function a(){u.selectedCredentialsType=u.selectedProtocol.supportedCredentialsTypes[0],_.assign(u.endpoint.config,{protocol:u.selectedProtocol.value,port:u.selectedProtocol.defaults.port,hostname:u.selectedProtocol.defaults.host,credentialsType:u.selectedCredentialsType.value})}function c(){u.endpoint.config.credentialsType=u.selectedCredentialsType.value}function i(){u.modalInstance.close(u.endpoint)}function l(){u.modalInstance.dismiss()}function d(e){u.changingPassword=e,_.set(u.endpoint,"config.password",e?"":v)}function m(e){u.changingCredentials=e,_.set(u.endpoint,"config.username",e?"":g),_.set(u.endpoint,"config.password",e?"":v)}function p(){return g&&v}var u=this,v=void 0,g=void 0;_.assign(u,{protocols:e.PROTOCOLS,ipOrHostnamePattern:new RegExp(t.validation.ip.pattern.source+"|"+t.validation.hostname.pattern.source),$onInit:o,save:i,cancel:l,changePassword:function(){return d(!0)},cancelChangePassword:function(){return d(!1)},changeCredentials:function(){return m(!0)},cancelChangeCredentials:function(){return m(!1)},onProtocolChange:a,onCredentialsTypeChange:c,credentialsTypes:e.CREDENTIALS_TYPES,credentialsAvailable:p})}e.$inject=["c8yRemoteAccess","c8yRemoteAccessUI","c8yConfig"],angular.module("c8y.remoteAccess").component("c8yRemoteAccessEndpointModal",{bindings:{resolve:"<",modalInstance:"<"},templateUrl:"core_remoteAccess/remoteAccessEndpointModal/remoteAccessEndpointModal.html",controller:e,controllerAs:"vm"})}(),function(){"use strict";function e(e,n){function t(){return e.isLocalEndpoint(c.endpoint)}function o(){var e=(c.endpoint.connection||{}).status,n=e&&e.level;return{btn:!0,"btn-block":!0,"btn-default":!e,"btn-warning":"warn"===n,"btn-success":"normal"===n}}function s(){var e=(c.endpoint.connection||{}).vncClientWindow;e&&!e.closed?e.focus():c.onConnect({endpoint:c.endpoint})}function r(){c.onEdit({endpoint:c.endpoint})}function a(){c.onRemove({endpoint:c.endpoint})}var c=this,i=n("Local");_.assign(c,{isLocal:t,labelLocal:i,connectBtnCls:o,connect:s,edit:r,remove:a})}e.$inject=["c8yRemoteAccessUI","gettext"],angular.module("c8y.remoteAccess").component("c8yRemoteAccessEndpointCard",{bindings:{endpoint:"<",onConnect:"&",onEdit:"&",onRemove:"&"},templateUrl:"core_remoteAccess/remoteAccessEndpointCard/remoteAccessEndpointCard.html",controller:e,controllerAs:"vm"})}(),function(){"use strict";function e(e){var n;n='<div class="flex-row">\n  <div class="list-item-actions">\n    <div class="dropdown settings" uib-dropdown>\n      <button class="dropdown-toggle c8y-dropdown btn-link" uib-dropdown-toggle>\n        <i c8y-icon="ellipsis-v"></i>\n      </button>\n      <ul class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n        <li>\n          <button ng-click="vm.edit()">\n            <i c8y-icon="edit"></i>\n            <translate>Edit</translate>\n        </button>\n        </li>\n        <li>\n          <button ng-click="vm.remove()">\n            <i c8y-icon="times"></i>\n            <translate>Remove</translate>\n        </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class="list-item-icon">\n    <i c8y-icon="{{vm.isLocal() ? \'laptop\' : \'globe\'}}" ng-attr-data-label-local="{{vm.isLocal() ? (vm.labelLocal | translate) : undefined}}">\n    </i>\n  </div>\n  <div class="list-item-body">\n    <div class="flex-row">\n      <div class="col-md-3 col-xs-12">\n        <div class="text-truncate">\n          <span ng-bind="vm.endpoint.config.name" title="{{vm.endpoint.config.name}}"></span>\n        </div>\n      </div>\n\n      <div class="col-md-4 col-xs-12">\n        <div class="text-truncate">\n          <label class="text-muted" translate>Host</label>\n          <span ng-bind="vm.endpoint.config.hostname" title="{{vm.endpoint.config.hostname}}"></span>\n          <label class="text-muted" translate>Port</label> <span ng-bind="vm.endpoint.config.port"></span>\n        </div>\n      </div>\n\n      <div class="col-md-3 col-xs-12">\n        <label class="text-muted" translate>Protocol</label> <span ng-bind="vm.endpoint.config.protocol"></span>\n      </div>\n\n      <div class="col-md-2 col-xs-12">\n        <button ng-click="vm.connect()" ng-class="vm.connectBtnCls()" class="btn-sm">\n          <span ng-if="!vm.endpoint.connection.status" translate>Connect</span>\n          <span ng-if="vm.endpoint.connection.status" translate>Show</span>\n        </button>\n      </div>\n    </div>\n\n\n  </div>\n</div>',e.put("remoteAccess/remoteAccessEndpointCard/remoteAccessEndpointCard.html",n),e.put("core_remoteAccess/remoteAccessEndpointCard/remoteAccessEndpointCard.html",n),e.put("/apps/core/remoteAccess/remoteAccessEndpointCard/remoteAccessEndpointCard.html",n),n='<div class="modal-header">\n  <h3 translate>Remote access endpoint</h3>\n</div>\n<div class="modal-body">\n  <form name="endpointForm" role="form" novalidate>\n\n    <div class="form-group">\n      <label for="name" translate>\n        Name\n      </label>\n      <input id="name" name="name" type="text" class="form-control" ng-model="vm.endpoint.config.name" placeholder="{{\'e.g. My remote access endpoint\' | translate}}" ng-maxlength="1000" required>\n      <c8y-error-feedback field="endpointForm.name">\n      </c8y-error-feedback>\n    </div>\n\n    <div class="form-group">\n      <label for="protocol" translate>\n        Protocol\n      </label>\n      <div class="c8y-select-wrapper">\n        <select id="protocol" name="protocol" class="form-control" ng-model="vm.selectedProtocol" ng-options="p as (p.label | translate) for p in vm.protocols.values()" ng-change="vm.onProtocolChange()" required>\n        </select>\n        <span></span>\n      </div>\n      <c8y-error-feedback field="endpointForm.protocol">\n      </c8y-error-feedback>\n    </div>\n\n    <div class="row">\n      <div class="col-lg-7">\n        <div class="form-group">\n          <label for="hostname">\n            {{\'Host\' | translate}}\n            <a tabindex="0" uib-popover-html="\'IP address or hostname in the local network\' | translate" popover-append-to-body="true" popover-placement="right" popover-trigger="\'focus\'">\n              <i c8y-icon="question-circle-o"></i>\n            </a>\n          </label>\n\n          <input id="hostname" name="hostname" type="text" class="form-control" placeholder="{{\'e.g.\' | translate}} {{vm.selectedProtocol.defaults.host}}" ng-model="vm.endpoint.config.hostname" uib-typeahead="suggestedIPAddress.ipAddress as suggestedIPAddress.ipAddress for suggestedIPAddress in vm.suggestedIPAddresses | filter:$viewValue" typeahead-template-url="core_remoteAccess/remoteAccessEndpointModal/suggestedIPAddressTemplate.html" typeahead-show-hint="true" typeahead-min-length="0" ng-pattern="vm.ipOrHostnamePattern" ng-maxlength="255" required>\n          <c8y-error-feedback field="endpointForm.hostname">\n            <span ng-message="pattern" translate>Please provide valid IP address or hostname.</span>\n          </c8y-error-feedback>\n        </div>\n      </div>\n      <div class="col-lg-5">\n        <div class="form-group">\n          <label for="port" translate>\n            Port\n          </label>\n          <input id="port" name="port" type="number" class="form-control" ng-model="vm.endpoint.config.port" placeholder="{{\'e.g.\' | translate}} {{vm.selectedProtocol.defaults.port}}" ng-min="1" ng-max="65535" required>\n          <c8y-error-feedback field="endpointForm.port">\n          </c8y-error-feedback>\n        </div>\n      </div>\n    </div>\n\n    <div class="form-group" ng-if="vm.selectedProtocol.supportedCredentialsTypes.length > 1">\n      <label for="credentialsType" translate>\n        Sign-in method\n      </label>\n      <div class="c8y-select-wrapper">\n        <select id="credentialsType" name="credentialsType" class="form-control" ng-model="vm.selectedCredentialsType" ng-options="ct as (ct.label | translate) for ct in vm.selectedProtocol.supportedCredentialsTypes" ng-change="vm.onCredentialsTypeChange()" required>\n        </select>\n        <span></span>\n      </div>\n      <c8y-error-feedback field="endpointForm.credentialsType">\n      </c8y-error-feedback>\n    </div>\n\n    <div ng-if="vm.selectedCredentialsType.value === \'PASS_ONLY\'">\n      <div class="form-group">\n        <label for="password" translate>\n          Password\n        </label>\n\n        <div ng-class="{\'input-group\': vm.passwordAlreadyExists}">\n          <input id="password" ng-if="!vm.passwordAlreadyExists || vm.changingPassword" name="password" type="password" class="form-control" ng-model="vm.endpoint.config.password" placeholder="{{\'e.g. my_password\' | translate}}" c8y-autocomplete="off" ng-maxlength="255" required>\n          <input disabled="disabled" style="color:rgba(0,0,0,0.2)" class="form-control" type="password" value="********" ng-if="vm.passwordAlreadyExists && !vm.changingPassword">\n          <span class="input-group-btn" ng-show="vm.passwordAlreadyExists">\n            <button class="btn btn-default" ng-hide="vm.changingPassword" ng-click="vm.changePassword()">{{\'Change\' | translate}}</button>\n            <button class="btn btn-default" ng-show="vm.changingPassword" ng-click="vm.cancelChangePassword()">{{\'Cancel\' | translate}}</button>\n          </span>\n        </div>\n        <c8y-error-feedback field="endpointForm.password">\n        </c8y-error-feedback>\n      </div>\n    </div>\n\n    <div ng-if="vm.selectedCredentialsType.value === \'USER_PASS\'">\n      <div class="form-group" ng-if="!vm.credentialsAvailable() || vm.changingCredentials">\n        <label for="username" translate>\n          Username\n        </label>\n\n        <div>\n          <input id="username" name="username" type="text" class="form-control" ng-model="vm.endpoint.config.username" placeholder="{{\'e.g. my_username\' | translate}}" ng-maxlength="255" ng-readonly="vm.credentialsAvailable() && !vm.changingCredentials" required>\n        </div>\n        <c8y-error-feedback field="endpointForm.username">\n        </c8y-error-feedback>\n      </div>\n\n      <div class="form-group" ng-if="!vm.credentialsAvailable() || vm.changingCredentials">\n        <label for="password" translate>\n          Password\n        </label>\n\n        <div>\n          <input id="password" ng-if="!vm.credentialsAvailable() || vm.changingCredentials" name="password" type="password" class="form-control" ng-model="vm.endpoint.config.password" placeholder="{{\'e.g. my_password\' | translate}}" c8y-autocomplete="off" ng-maxlength="255" required>\n        </div>\n        <c8y-error-feedback field="endpointForm.password">\n        </c8y-error-feedback>\n      </div>\n      <div class="form-group">\n        <span ng-show="vm.passwordAlreadyExists || vm.usernameAlreadyExists">\n          <button class="btn btn-default" ng-hide="vm.changingCredentials" ng-click="vm.changeCredentials()">{{\'Change credentials\' | translate}}</button>\n          <button class="btn btn-default" ng-show="vm.changingCredentials" ng-click="vm.cancelChangeCredentials()">{{\'Cancel\' | translate}}</button>\n        </span>\n      </div>\n    </div>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default" ng-click="vm.cancel()" translate>\n    Cancel\n  </button>\n  <button class="btn btn-primary" ng-disabled="endpointForm.$pending || endpointForm.$invalid" ng-click="vm.save()" translate>\n    Save\n  </button>\n</div>\n',e.put("remoteAccess/remoteAccessEndpointModal/remoteAccessEndpointModal.html",n),e.put("core_remoteAccess/remoteAccessEndpointModal/remoteAccessEndpointModal.html",n),e.put("/apps/core/remoteAccess/remoteAccessEndpointModal/remoteAccessEndpointModal.html",n),n='<a>\r\n  <strong ng-bind-html="match.model.label | uibTypeaheadHighlight:query">\r\n  </strong>\r\n  <p>\r\n    <small class="text-muted" ng-bind-html="match.model.ipAddress | uibTypeaheadHighlight:query">\r\n    </small>\r\n  </p>\r\n</a>\r\n',e.put("remoteAccess/remoteAccessEndpointModal/suggestedIPAddressTemplate.html",n),e.put("core_remoteAccess/remoteAccessEndpointModal/suggestedIPAddressTemplate.html",n),e.put("/apps/core/remoteAccess/remoteAccessEndpointModal/suggestedIPAddressTemplate.html",n),n='<c8y-ui-action-bar-set>\r\n  <li>\r\n    <button class="btn btn-link" ng-click="vm.addEndpoint()">\r\n    <i c8y-icon="plus-circle"></i>\r\n    <span translate>Add endpoint</span>\r\n    </button>\r\n  </li>\r\n</c8y-ui-action-bar-set>\r\n\r\n\r\n<div>\r\n\r\n  <div class="c8y-empty-state text-center" ng-show="vm.endpoints && vm.endpoints.length === 0">\r\n    <h1 c8y-icon="window-restore"></h1>\r\n    <h3 translate>There are no endpoints defined.</h3>\r\n    <p><small translate>Click below to add your first one.</small></p>\r\n    <button class="btn btn-primary" ng-click="vm.addEndpoint()" translate>Add endpoint</button>\r\n  </div>\r\n\r\n  <div class="list-group endpoints-list">\r\n    <div class="list-group-item" ng-repeat="endpoint in vm.endpoints | orderBy:vm.endpointsOrderFn">\r\n      <c8y-remote-access-endpoint-card endpoint="endpoint" on-connect="vm.onConnect(endpoint)" on-edit="vm.onEdit(endpoint)" on-remove="vm.onRemove(endpoint)">\r\n      </c8y-remote-access-endpoint-card>\r\n    </div>\r\n  </div>\r\n</div>',e.put("remoteAccess/remoteAccessEndpointsList/remoteAccessEndpointsList.html",n),e.put("core_remoteAccess/remoteAccessEndpointsList/remoteAccessEndpointsList.html",n),e.put("/apps/core/remoteAccess/remoteAccessEndpointsList/remoteAccessEndpointsList.html",n),n="<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Telnet</title>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n\n  <script>\n    var xtermPath = isDev() ? 'node_modules/xterm/dist/' : '';\n\n    loadCss('style.css');\n    loadCss('xterm.css', xtermPath);\n    loadJs('xterm.js', xtermPath);\n    loadJs('addons/fit/fit.js', xtermPath);\n    loadJs('telnet-simple-client.js');\n    loadJs('index.js');\n\n    function isDev() {\n      var hostname = location.hostname;\n      return hostname === 'localhost' || hostname === '127.0.0.1';\n    }\n\n    function loadCss(css, basePath) {\n      var link = document.createElement('link');\n      link.href = (basePath || '') + css;\n      link.type = 'text/css';\n      link.rel = 'stylesheet';\n      link.media = 'screen,print';\n      document.getElementsByTagName('head')[0].appendChild(link);\n    }\n\n    function loadJs(js, basePath) {\n      var script = document.createElement('script');\n      script.src = (basePath || '') + js;\n      document.getElementsByTagName('head')[0].appendChild(script);\n    }\n  </script>\n</head>\n\n<body>\n  <div id=\"terminal\"></div>\n</body>\n\n</html>",e.put("remoteAccess/telnetClient/index.html",n),e.put("core_remoteAccess/telnetClient/index.html",n),e.put("/apps/core/remoteAccess/telnetClient/index.html",n),n='<!DOCTYPE html>\n<html>\n  <head>\n    <title>noVNC</title>\n    <meta charset="utf-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n    <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no">\n    <script>\n      var INCLUDE_URI;\n      var NO_VNC_INCLUDE;\n      INCLUDE_URI = NO_VNC_INCLUDE = isDev() ? \'node_modules/noVnc/include/\' : \'\';\n      var LODASH_INCLUDE = isDev() ? \'node_modules/lodash/\' : \'\';\n\n      loadCss(\'base.css\', NO_VNC_INCLUDE);\n      loadJs(\'lodash.min.js\', LODASH_INCLUDE);\n      loadJs(\'util.js\', NO_VNC_INCLUDE);\n      startVncClient();\n\n      function isDev() {\n        var hostname = location.hostname;\n        return hostname === \'localhost\' || hostname === \'127.0.0.1\';\n      }\n\n      function loadCss(css, basePath) {\n        var link = document.createElement(\'link\');\n        link.href = (basePath || \'\') + css;\n        link.type = \'text/css\';\n        link.rel = \'stylesheet\';\n        link.media = \'screen,print\';\n        document.getElementsByTagName(\'head\')[0].appendChild(link);\n      }\n\n      function loadJs(js, basePath) {\n        var script = document.createElement(\'script\');\n        script.src = (basePath || \'\') + js;\n        document.getElementsByTagName(\'head\')[0].appendChild(script);\n      }\n\n      function startVncClient() {\n        window.setTimeout(function () {\n          if (window.Util) {\n            loadJs(\'vncClient.js\');\n          } else {\n            startVncClient();\n          }\n        }, 10);\n      }\n    </script>\n  </head>\n\n  <body>\n    <div id="noVNC_container">\n      <div id="noVNC_status_bar" class="noVNC_status_bar" style="margin-top: 0px">\n        <table border="0" width="100%">\n          <tr>\n            <td>\n              <div id="noVNC_status" style="position: relative; height: auto">\n                Loading\n              </div>\n            </td>\n            <td width="1%">\n              <div id="noVNC_buttons">\n                <input type="button" value="Send Ctrl+Alt+Del" id="sendCtrlAltDelButton">\n                <span id="noVNC_xvp_buttons">\n                  <input type="button" value="Shutdown" id="xvpShutdownButton">\n                  <input type="button" value="Reboot" id="xvpRebootButton">\n                  <input type="button" value="Reset" id="xvpResetButton">\n                </span>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n      <canvas id="noVNC_canvas" width="640px" height="20px">\n        Canvas not supported.\n      </canvas>\n    </div>\n  </body>\n</html>\n',e.put("remoteAccess/vncClient/vncClient.html",n),e.put("core_remoteAccess/vncClient/vncClient.html",n),e.put("/apps/core/remoteAccess/vncClient/vncClient.html",n)}angular.module("c8y.remoteAccess").run(["$templateCache",e])}();