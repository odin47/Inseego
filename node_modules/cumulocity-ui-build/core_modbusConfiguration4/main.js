/* core_modbusConfiguration4 9.12.5 2018-08-27T16:54:18+00:00 b689bea882f7+ (release/9.12.0) tip */
function _asyncToGenerator(e){return function(){var n=e.apply(this,arguments);return new Promise(function(e,i){function a(t,s){try{var o=n[t](s),r=o.value}catch(e){return void i(e)}return o.done?void e(r):Promise.resolve(r).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _asyncToGenerator(e){return function(){var n=e.apply(this,arguments);return new Promise(function(e,i){function a(t,s){try{var o=n[t](s),r=o.value}catch(e){return void i(e)}return o.done?void e(r):Promise.resolve(r).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _defineProperty(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}!function(){"use strict";angular.module("c8y.modbusConfiguration4",[])}(),function(){"use strict";angular.module("c8y.modbusConfiguration4").constant("modbusConfigurationConstants",{FRAGMENTS:{MODBUS:"c8y_ModbusConfiguration",CANBUS:"c8y_CanConfiguration",OPCUA:"c8y_OPCUAGateway",PROFIBUS:"c8y_ProfibusConfiguration",CANOPEN:"c8y_CANopenConfiguration"}})}(),function(){"use strict";function e(e,n,i){function a(e){function n(n,i,a,t,s){var o=this;return _asyncToGenerator(regeneratorRuntime.mark(function r(){var l,d,c;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,n.all({hasApplication:s.isApplicationAvailable(),hasFragment:t.detailCached(i.deviceId).then(a.getResData).then(function(n){return _.has(n,e)})});case 2:return l=o.sent,d=l.hasApplication,c=l.hasFragment,o.abrupt("return",d&&c);case 6:case"end":return o.stop()}},r,o)}))()}return n.$inject=["$q","$routeParams","c8yBase","c8yDevices","c8yFieldbus"],n}var t=n.FRAGMENTS,s="/device/:deviceId";e.when(s,{name:i("Modbus"),icon:"microchip",template:'<c8y-fieldbus-config tab="modbus"></c8y-fieldbus-config>',showIf:a(t.MODBUS)}),e.when(s,{name:i("CAN Bus"),icon:"share-alt",template:'<c8y-fieldbus-config tab="canbus"></c8y-fieldbus-config>',showIf:a(t.CANBUS)}),e.when(s,{name:i("OPCUA"),icon:"cogs",template:'<c8y-fieldbus-config tab="opcua"></c8y-fieldbus-config>',showIf:a(t.OPCUA)}),e.when(s,{name:i("Profibus"),icon:"ravelry",template:'<c8y-fieldbus-config tab="profibus"></c8y-fieldbus-config>',showIf:a(t.PROFIBUS)}),e.when(s,{name:i("CANopen"),icon:"sitemap",template:'<c8y-fieldbus-config tab="canopen"></c8y-fieldbus-config>',showIf:a(t.CANOPEN)})}e.$inject=["c8yViewsProvider","modbusConfigurationConstants","gettext"],angular.module("c8y.modbusConfiguration4").config(e)}(),function(){"use strict";function e(e,n,i,a,t,s,o,r,l,d){function c(){U="new"+S.mode+"DeviceForm"}function u(e){return m(),n.invalid(S,U,e)}function m(){var e=S.mode,n=S.fieldErrors;if("TCP"===e||"RTU"===e){var i=S[U],a=i.address;if(a){var t=a.$modelValue;if("TCP"===e){var s=i.ipAddress,o=s.$modelValue;_.isUndefined(t)||a.$setValidity(n.ADDRESS_INVALID,v(t));var r=t&&o&&_.some(S.devices,{address:t,ipAddress:o,protocol:"TCP"});a.$setValidity(n.ADDRESSES_IN_USE,!r),s.$setValidity(n.ADDRESSES_IN_USE,!r)}else if("RTU"===e){var l=t&&_.some(S.devices,{address:t,protocol:"RTU"});a.$setValidity(n.ADDRESS_IN_USE,!l)}}}else if("CANopen"===e){var d=S[U],c=d.nodeId;if(c){var u=c.$modelValue;if(u){var m=f(u),g=p(u);m?g?(c.$setValidity(n.NODE_OUT_OF_RANGE,!0),c.$setValidity(n.NODE_IN_USE,!1)):(c.$setValidity(n.NODE_OUT_OF_RANGE,!0),c.$setValidity(n.NODE_IN_USE,!0)):(c.$setValidity(n.NODE_OUT_OF_RANGE,!1),c.$setValidity(n.NODE_IN_USE,!0))}}}}function v(e){return e<=247||255===e}function f(e){return e>=1&&e<=127}function p(e){return S.devices.find(function(n){return!(!n||!n.nodeId)&&n.nodeId===e})}function g(e){var i=_.get(S,U+"."+e);return i?n.validationHints(i,S.fieldErrorsToMessages):""}function b(){return _.get(S,U+".$invalid")||_.get(S,"newDevice.adding")}function y(){S.newDevice={name:null,deviceType:null,address:null}}function C(){A(),S.reloadDevices(),i.success(d("New child device has been added!"))}function h(){S.newDevice.adding=!1,i.danger(d("Failed to add new child device."))}function A(){_.unset(S,"newDevice");var e=S[U];e.$setPristine(),document.getElementsByName("vm."+U)[0].reset()}function D(){return O()?function(e){var n=_.get(e,"protocol");return n===S.mode}:w()?function(e){return e.nodeId}:function(){return!0}}function R(){var e=S.device,n=S.mode,i=!1;return O()?"TCP"===n?i=l.supportsOperation(e,"c8y_ModbusDevice"):"RTU"===n&&(i=l.supportsOperation(e,"c8y_ModbusDevice")&&e.c8y_SerialConfiguration):P()&&"CAN"===n?i=l.supportsOperation(e,"c8y_CanDevice"):T()&&"Profibus"===n?i=l.supportsOperation(e,"c8y_ProfibusDevice"):w()&&"CANopen"===n&&(i=l.supportsOperation(e,"c8y_CANopenAddDevice")),i}function O(){return"modbus"===S.tab}function P(){return"canbus"===S.tab}function N(){return"opcua"===S.tab}function T(){return"profibus"===S.tab}function w(){return"canopen"===S.tab}var F=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(){var i,l,d;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:if(i=S.mode,l=S.device,d=S.newDevice,d.adding=!0,d.protocol=i,n.prev=3,!O()){n.next=9;break}return n.next=7,a.create(l,d);case 7:n.next=27;break;case 9:if(!P()){n.next=14;break}return n.next=12,t.create(l,d);case 12:n.next=27;break;case 14:if(!N()){n.next=19;break}return n.next=17,s.create(l,d);case 17:n.next=27;break;case 19:if(!T()){n.next=24;break}return n.next=22,o.create(l,d);case 22:n.next=27;break;case 24:if(!w()){n.next=27;break}return n.next=27,r.create(l,d);case 27:C(),n.next=33;break;case 30:n.prev=30,n.t0=n.catch(3),h();case 33:e.$apply();case 34:case"end":return n.stop()}},n,this,[[3,30]])}));return function(){return n.apply(this,arguments)}}(),S=this,U=void 0;_.assign(S,{$onInit:c,shouldShowSection:R,isModbusTab:O,isCanBusTab:P,isOPCUATab:N,isProfibusTab:T,isCanOpenTab:w,invalid:u,getFieldValidationHints:g,isFormInvalid:b,startAddingNewDevice:y,addNewDevice:F,clearNewDevice:A,filterByMode:D})}e.$inject=["$rootScope","c8yBase","c8yAlert","c8yModbusDevice","c8yCanbusDevice","c8yOPCUADevice","c8yProfibusDevice","c8yCanopenDevice","c8yDevices","gettext"],angular.module("c8y.modbusConfiguration4").component("c8yFieldbusDeviceList",{templateUrl:"core_modbusConfiguration4/fieldbus-device-list.html",bindings:{tab:"@",mode:"@",fieldErrors:"<",fieldErrorsToMessages:"<",deviceConfigurationOptions:"<",device:"<",devices:"<",reloadDevices:"<",onClickDelete:"<",navigateToDetail:"<"},controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e,n,i,a,t,s,o,r,l,d,c,u,m,v){function f(){p().then(g).then(h)}function p(){return o.detail(J).then(s.getResData).then(function(e){G()?_.defaults(e.c8y_SerialConfiguration,{baudRate:19200,dataBits:8,parity:"E",stopBits:1}):H()&&(Q.serialConfigurationOptions.baudRates=[1e5,125e3,25e4,5e5,1e6]),Q.device=e})}function g(){var e=Q.device;return _.assign(Q,{hasSerialConfigOperation:o.supportsOperation(e,"c8y_SerialConfiguration"),hasFieldBusConfigOperation:b(e),serialConfiguration:y(e),fieldbusConfiguration:C(e)}),d.getAvailableDeviceTypes().then(function(e){Z.types=_.filter(e,function(e){var n=e.fieldbusType;return G()&&"modbus"===n||H()&&"canbus"===n||j()&&"opcua"===n||W()&&"profibus"===n||Y()&&"canopen"===n})})}function b(e){return H()&&o.supportsOperation(e,"c8y_CanConfiguration")||G()&&o.supportsOperation(e,"c8y_ModbusConfiguration")||j()&&o.supportsOperation(e,"c8y_OPCUAConfiguration")||W()&&o.supportsOperation(e,"c8y_ProfibusConfiguration")||Y()&&o.supportsOperation(e,"c8y_CANopenConfiguration")}function y(e){return _.get(e,"c8y_SerialConfiguration",{})}function C(e){var n={};return e&&(G()?n=e.c8y_ModbusConfiguration:H()?n=e.c8y_CanConfiguration:j()?(e.c8y_OPCUAGateway&&(e.c8y_OPCUAGateway.transmitRate=e.c8y_OPCUAGateway.transmitRate||0,_.unset(e,"c8y_OPCUAGateway.userIdentityPassword")),n=e.c8y_OPCUAGateway):W()?(_.defaultsDeep(e,{c8y_ProfibusConfiguration:{baudRate:m("automatic")}}),n=e.c8y_ProfibusConfiguration):Y()&&(n=e.c8y_CANopenConfiguration)),n}function h(){return o.childDevices(J).then(function(e){Q.devices=_.map(e,function(e){var n=void 0;return G()&&e.c8y_ModbusDevice?n=A(e):H()&&e.c8y_CanDevice?n=D(e):j()&&e.c8y_OPCUADevice?n=R(e):W()&&e.c8y_ProfibusDevice?n=O(e):Y()&&e.c8y_CANopenDevice&&(n=P(e)),n})})}function A(e){var n=N({device:e,fieldbusDeviceFragment:"c8y_ModbusDevice"});return{id:e.id,name:e.name,deviceType:_.get(n,"name"),address:e.c8y_ModbusDevice.address,ipAddress:e.c8y_ModbusDevice.ipAddress,protocol:e.c8y_ModbusDevice.protocol}}function D(e){var n=N({device:e,fieldbusDeviceFragment:"c8y_CanDevice"});return{id:e.id,name:e.name,deviceType:_.get(n,"name")}}function R(e){var n=N({device:e,fieldbusDeviceFragment:"c8y_OPCUADevice"});return{id:e.id,name:e.name,deviceType:_.get(n,"name"),directoryPath:e.c8y_OPCUADevice.browsePath}}function O(e){var n=N({device:e,fieldbusDeviceFragment:"c8y_ProfibusDevice"});return{id:e.id,name:e.name,deviceType:_.get(n,"name")}}function P(e){var n=N({device:e,fieldbusDeviceFragment:"c8y_CANopenDevice"});return{id:e.id,name:e.name,deviceType:_.get(n,"name"),nodeId:e.c8y_CANopenDevice.nodeId}}function N(e){var n=e.device,i=e.fieldbusDeviceFragment;return _(Z.types).find(function(e){var a=e.id;return _.get(n,i+".type")==="/inventory/managedObjects/"+a})}function T(e){r({title:m("Confirm delete?"),body:v.getString('Do you really want to remove device "{{name}}" with id {{id}}?',e),size:"sm",labels:{ok:m("Delete")},status:"danger"}).then(function(){return o.remove(e)}).then(function(){return Y()?c.onRemove(Q.device,e):n.resolve()}).then(function(){Q.devices=_.without(Q.devices,e),l.success(m("Device deleted!"))}).catch(function(e){e&&l.danger(e)})}function w(e){a.url("device/"+e.id)}function F(){return G()&&_.get(Q,"device.c8y_SerialConfiguration")}function S(){U(Q.device).then(function(){return l.success(m("Operation to apply settings has been sent!"))})}function U(e){return t.create({deviceId:e.id,description:m("Set serial configuration"),c8y_SerialConfiguration:e.c8y_SerialConfiguration})}function I(){E(Q.device).then(function(){return l.success(m("Operation to apply settings has been sent!"))})}function E(e){var i=n.resolve();return G()&&e.c8y_ModbusConfiguration?i=B(e):H()?i=k(e):j()?i=V(e):W()?i=$(e):Y()&&(i=x(e)),i}function B(e){return t.create({deviceId:e.id,description:m("Set modbus configuration"),c8y_ModbusConfiguration:e.c8y_ModbusConfiguration})}function k(e){return t.create({deviceId:e.id,description:m("Set CAN Bus configuration"),c8y_CanConfiguration:e.c8y_CanConfiguration})}function x(e){return t.create({deviceId:e.id,description:m("Set CAN Open configuration"),c8y_CANopenConfiguration:e.c8y_CANopenConfiguration})}function V(e){var n=e.c8y_OPCUAGateway.transmitRate,i=_.merge(_.cloneDeep(e),{c8y_OPCUAGateway:{transmitRate:0===n?void 0:n}});return o.update(_.pick(i,["id","c8y_OPCUAGateway"]))}function $(e){return t.create({deviceId:e.id,description:m("Set Profibus configuration"),c8y_ProfibusConfiguration:_.pick(e.c8y_ProfibusConfiguration,["transmitRate","slaveAddress"])})}function M(e,n){return(G()||j())&&L(e),j()&&q(e),s.invalid(Q,e,n)}function L(e){var n=Q[e],i=n.pollingRate;if(i){var a=n.transmitRate,t=!0,s=!0,o=i.$modelValue<=a.$modelValue;j()&&0===a.$modelValue&&(o=!0),(!_.isInteger(a.$modelValue)||a.$modelValue<=0)&&(t=!1),(!_.isInteger(i.$modelValue)||i.$modelValue<=0)&&(s=!1),a.$setValidity(ee.ONLY_NATURAL_NUMBERS_ALLOWED,t),a.$setValidity(ee.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE,o),i.$setValidity(ee.ONLY_NATURAL_NUMBERS_ALLOWED,s),i.$setValidity(ee.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE,o)}}function q(e){var n=Q[e],i=n.OPCUAUrl,a=u.validation.opcuaBrowsePath.pattern,t=i.$modelValue;i.$setValidity(ee.INVALID_URL,!t||a.test(t))}function G(){return"modbus"===Q.tab}function H(){return"canbus"===Q.tab}function j(){return"opcua"===Q.tab}function W(){return"profibus"===Q.tab}function Y(){return"canopen"===Q.tab}var z,Q=this,J=i.deviceId,K={baudRates:[110,300,600,1200,2400,4800,9600,14400,19200,38400,57600,115200,25e4,460800,5e5,921600,1e6],dataBits:[8],parities:["N","E","O"],stopBits:[1,2]},X={baudRates:[{value:1e3,label:"1 Mbit/s"},{value:800,label:"800 kbit/s"},{value:500,label:"500 kbit/s"},{value:250,label:"250 kbit/s"},{value:125,label:"125 kbit/s"},{value:50,label:"50 kbit/s"},{value:20,label:"20 kbit/s"},{value:10,label:"10 kbit/s"}]},Z={types:[]},ee={IS_REQUIRED:"required",ADDRESS_IN_USE:"address-in-use",ADDRESSES_IN_USE:"addresses-in-use",ADDRESS_INVALID:"address-invalid",POLLING_RATE_LARGER_THAN_TRANSMIT_RATE:"polling-rate-larger-than-transmit-rate",ONLY_NATURAL_NUMBERS_ALLOWED:"only-natural-numbers-allowed",IPADDRESS_INVALID_FORMAT:"ip",INVALID_URL:"invalid-url",NODE_IN_USE:"node-in-use",NODE_OUT_OF_RANGE:"node-out-of-range"},ne=(z={},_defineProperty(z,ee.IS_REQUIRED,m("This field is required!")),_defineProperty(z,ee.ADDRESS_IN_USE,m("This address is already in use!")),_defineProperty(z,ee.ADDRESSES_IN_USE,m("These addresses are already in use!")),_defineProperty(z,ee.ADDRESS_INVALID,m("Addresses from 248 up to 254 are not allowed.")),_defineProperty(z,ee.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE,m("Polling rate should be equal to or smaller than transmit rate!")),_defineProperty(z,ee.ONLY_NATURAL_NUMBERS_ALLOWED,m("Only natural numbers allowed!")),_defineProperty(z,ee.IPADDRESS_INVALID_FORMAT,m("The IP address format is invalid!")),_defineProperty(z,ee.INVALID_URL,m("The URL format is invalid! The only supported protocols are http, https and opc.tcp.")),_defineProperty(z,ee.NODE_IN_USE,m("This node id is already in use!")),_defineProperty(z,ee.NODE_OUT_OF_RANGE,m("Only node id(s) between 1 and 127 are allowed")),z);_.assign(Q,{$onInit:f,shouldShowSerialPanel:F,isModbusTab:G,isCanBusTab:H,isOPCUATab:j,isProfibusTab:W,isCanOpenTab:Y,getFieldValidationHints:_.curryRight(s.validationHints)(ne),serialConfigurationOptions:K,fieldbusConfigurationOptions:X,deviceConfigurationOptions:Z,fieldErrors:ee,fieldErrorsToMessages:ne,saveSerialConfig:S,saveFieldbusConfig:I,invalid:M,reloadDevices:h,onClickDelete:T,navigateToDetail:w})}e.$inject=["$rootScope","$q","$routeParams","$location","c8yDeviceControl","c8yBase","c8yDevices","c8yModal","c8yAlert","c8yDeviceDatabase","c8yCanopenDevice","c8yConfig","gettext","gettextCatalog"],angular.module("c8y.modbusConfiguration4").component("c8yFieldbusConfig",{templateUrl:"core_modbusConfiguration4/fieldbus-config.html",bindings:{tab:"@"},controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e){var n;n='<div ng-if="vm.isModbusTab() || vm.isCanBusTab()" class="row">\n  <div class="col-lg-4 col-xs-12">\n    <div class="card-group" style="margin-bottom: 0">\n      <div ng-if="vm.shouldShowSerialPanel()" class="col-lg-12 col-sm-6 col-xs-12">\n        <div class="card">\n          <div class="card-header">\n            <h4 class="card-title" translate>Serial communication</h4>\n          </div>\n          <hr>\n          <div class="card-block">\n            <form name="vm.serialCommunicationForm">\n              <div class="form-group" ng-class="{\'has-error\': vm.invalid(\'serialCommunicationForm\', \'baudRate\')}">\n                <label for="serialCommunicationBaudRate" translate>\n                  Baud rate\n                </label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="serialCommunicationBaudRate" name="baudRate" ng-model="vm.serialConfiguration.baudRate" ng-options="baudRate for baudRate in vm.serialConfigurationOptions.baudRates" ng-disabled="!vm.hasSerialConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div ng-if="vm.isModbusTab()" class="form-group" ng-class="{\'has-error\': vm.invalid(\'serialCommunicationForm\', \'dataBits\')}">\n                <label for="dataBits" translate>Data bits</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="dataBits" name="dataBits" ng-model="vm.serialConfiguration.dataBits" ng-options="dataBit for dataBit in vm.serialConfigurationOptions.dataBits" ng-disabled="!vm.hasSerialConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div ng-if="vm.isModbusTab()" class="form-group" ng-class="{\'has-error\': vm.invalid(\'serialCommunicationForm\', \'parity\')}">\n                <label for="parity" translate>Parity</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="parity" name="parity" ng-model="vm.serialConfiguration.parity" ng-options="parity for parity in vm.serialConfigurationOptions.parities" ng-disabled="!vm.hasSerialConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div ng-if="vm.isModbusTab()" class="form-group" ng-class="{\'has-error\': vm.invalid(\'serialCommunicationForm\', \'stopBits\')}">\n                <label for="stopBits" translate>Stop bits</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control input-border" id="stopBits" name="stopBits" ng-model="vm.serialConfiguration.stopBits" ng-options="stopBit for stopBit in vm.serialConfigurationOptions.stopBits" ng-disabled="!vm.hasSerialConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n            </form>\n            <button class="btn btn-primary" ng-if="vm.hasSerialConfigOperation" ng-click="vm.saveSerialConfig()" ng-disabled="vm.serialCommunicationForm.$invalid" translate>\n              Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div class="col-lg-12 col-sm-6 col-xs-12">\n        <div class="card">\n          <div class="card-header">\n            <h4 class="card-title">\n              <span ng-if="vm.isModbusTab()" translate>\n                Modbus communication\n              </span>\n              <span ng-if="!vm.isModbusTab()" translate>\n                CAN Bus communication\n              </span>\n            </h4>\n          </div>\n          <hr>\n          <div class="card-block">\n            <form name="vm.fieldbusCommunicationForm">\n              <div ng-if="!vm.isModbusTab()" class="form-group" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'baudRate\')}">\n                <label for="fieldbusCommunicationBaudRate" translate>\n                  Baud rate\n                </label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="fieldbusCommunicationBaudRate" name="baudRate" ng-model="vm.fieldbusConfiguration.baudRate" ng-options="baudRate for baudRate in vm.serialConfigurationOptions.baudRates" ng-disabled="!vm.hasFieldBusConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div class="form-group modbusComInputs" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'transmitRate\')}">\n                <label for="transmitRate" translate>Transmit rate</label>\n                <div class="input-group">\n                  <input class="form-control input-border" type="number" id="transmitRate" name="transmitRate" ng-model="vm.fieldbusConfiguration.transmitRate" ng-disabled="!vm.hasFieldBusConfigOperation" ng-min="1" placeholder="{{\'e.g.\' | translate}} 1" required uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.transmitRate)}}" aria-describedby="transmitRateUnits">\n                  <span class="input-group-addon units" translate>\n                    seconds\n                  </span>\n                </div>\n              </div>\n              <div ng-if="vm.isModbusTab()" class="form-group modbusComInputs" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'pollingRate\')}">\n                <label for="pollingRate" translate>Polling rate</label>\n                <div class="input-group">\n                  <input class="form-control input-border" type="number" id="pollingRate" name="pollingRate" ng-model="vm.fieldbusConfiguration.pollingRate" ng-disabled="!vm.hasFieldBusConfigOperation" ng-min="1" placeholder="{{\'e.g.\' | translate}} 1" required uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.pollingRate)}}" aria-describedby="pollingRateUnits">\n                  <span class="input-group-addon units" translate>\n                    seconds\n                  </span>\n                </div>\n              </div>\n            </form>\n            <button ng-if="vm.hasFieldBusConfigOperation" class="btn btn-primary" ng-click="vm.saveFieldbusConfig()" ng-disabled="vm.fieldbusCommunicationForm.$invalid" translate>\n              Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="col-lg-8 col-xs-12">\n    <div ng-repeat="mode in [\'TCP\', \'RTU\', \'CAN\']">\n      <c8y-fieldbus-device-list tab="{{vm.tab}}" mode="{{mode}}" field-errors="vm.fieldErrors" field-errors-to-messages="vm.fieldErrorsToMessages" device-configuration-options="vm.deviceConfigurationOptions" device="vm.device" devices="vm.devices" reload-devices="vm.reloadDevices" on-click-delete="vm.onClickDelete" navigate-to-detail="vm.navigateToDetail">\n      </c8y-fieldbus-device-list>\n    </div>\n  </div>\n</div>\n\n<div ng-if="vm.isOPCUATab()" class="modbusConfigPanel">\n  <div class="panel panel-clean panel-border">\n    <div class="panel-heading">\n      <i c8y-icon="hdd-o"></i>\n      <span translate>OPCUA communication</span>\n    </div>\n    <form name="vm.fieldbusCommunicationForm">\n      <div class="row">\n        <div class="form-group col-lg-3" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'OPCUAUrl\')}">\n          <label for="OPCUAUrl" translate>URL</label>\n          <input class="form-control input-border" id="OPCUAUrl" name="OPCUAUrl" ng-model="vm.fieldbusConfiguration.url" placeholder="{{\'e.g.\' | translate}} http://opcua.demo-this.com:51211/UA/SampleServer" required uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.OPCUAUrl)}}">\n        </div>\n        <div class="form-group col-lg-3">\n          <label for="OPCUAUsername" translate>Username</label>\n          <input class="form-control input-border" id="OPCUAUsername" name="OPCUAUsername" ng-model="vm.fieldbusConfiguration.userIdentityName">\n        </div>\n        <div class="form-group col-lg-3">\n          <label for="OPCUAPassword" translate>Password</label>\n          <input class="form-control input-border" type="password" id="OPCUAPassword" name="OPCUAPassword" ng-model="vm.fieldbusConfiguration.userIdentityPassword" c8y-autocomplete="new-password">\n        </div>\n      </div>\n      <div class="row">\n        <div class="form-group col-lg-3 modbusComInputs" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'transmitRate\')}">\n          <label for="transmitRate" translate>Transmit rate</label>\n          <div class="input-group">\n            <input class="form-control input-border" type="number" id="transmitRate" name="transmitRate" ng-model="vm.fieldbusConfiguration.transmitRate" ng-min="0" required aria-describedby="transmitRateUnits" uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.transmitRate)}}">\n            <span class="input-group-addon units" translate>\n              seconds\n            </span>\n          </div>\n        </div>\n\n        <div class="form-group col-lg-3 modbusComInputs" ng-class="{\'has-error\': invalid(\'fieldbusCommunicationForm\', \'pollingRate\')}">\n          <label for="pollingRate" translate>Polling rate</label>\n          <div class="input-group">\n            <input class="form-control input-border" type="number" id="pollingRate" name="pollingRate" ng-model="vm.fieldbusConfiguration.pollingRate" ng-min="1" required aria-describedby="pollingRateUnits" uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.pollingRate)}}">\n            <span class="input-group-addon units" translate>\n              seconds\n            </span>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div ng-if="vm.hasFieldBusConfigOperation" class="saveButton">\n      <button class="btn btn-primary" ng-click="vm.saveFieldbusConfig()" ng-disabled="vm.fieldbusCommunicationForm.$invalid" translate>\n        Save changes\n      </button>\n    </div>\n  </div>\n\n  <hr>\n\n  <c8y-fieldbus-device-list tab="{{vm.tab}}" mode="OPCUA" field-errors="vm.fieldErrors" field-errors-to-messages="vm.fieldErrorsToMessages" device-configuration-options="vm.deviceConfigurationOptions" device="vm.device" devices="vm.devices" reload-devices="vm.reloadDevices" on-click-delete="vm.onClickDelete" navigate-to-detail="vm.navigateToDetail">\n  </c8y-fieldbus-device-list>\n</div>\n\n<div ng-if="vm.isProfibusTab()" class="row">\n  <div class="col-lg-4 col-xs-12">\n    <div class="card">\n      <div class="card-header">\n        <h4 class="card-title" translate>Profibus communication</h4>\n      </div>\n      <hr>\n      <div class="card-block">\n        <form name="vm.fieldbusCommunicationForm">\n          <div class="form-group">\n            <label for="baudRate" translate>Baud rate</label>\n            <input class="form-control" id="baudRate" name="baudRate" ng-value="vm.fieldbusConfiguration.baudRate | translate" readonly="readonly">\n          </div>\n          <div class="form-group" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'transmitRate\')}">\n            <label for="transmitRate" translate>Transmit rate</label>\n            <div class="input-group">\n              <input class="form-control input-border" type="number" id="transmitRate" name="transmitRate" ng-model="vm.fieldbusConfiguration.transmitRate" ng-disabled="!vm.hasFieldBusConfigOperation" ng-min="1" required uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.transmitRate)}}">\n              <span class="input-group-addon units" translate>seconds</span>\n            </div>\n          </div>\n          <div class="form-group" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'slaveAddress\')}">\n            <label for="slaveAddress" translate>Slave address</label>\n            <input class="form-control input-border" type="number" id="slaveAddress" name="slaveAddress" ng-model="vm.fieldbusConfiguration.slaveAddress" ng-disabled="!vm.hasFieldBusConfigOperation" ng-min="1" ng-max="128" ng-step="1" required uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.slaveAddress)}}">\n          </div>\n        </form>\n      </div>\n      <div class="card-footer">\n        <button ng-if="vm.hasFieldBusConfigOperation" class="btn btn-primary" ng-click="vm.saveFieldbusConfig()" ng-disabled="vm.fieldbusCommunicationForm.$invalid" translate>\n          Save\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class="col-lg-8 col-xs-12">\n    <c8y-fieldbus-device-list tab="{{vm.tab}}" mode="Profibus" field-errors="vm.fieldErrors" field-errors-to-messages="vm.fieldErrorsToMessages" device-configuration-options="vm.deviceConfigurationOptions" device="vm.device" devices="vm.devices" reload-devices="vm.reloadDevices" on-click-delete="vm.onClickDelete" navigate-to-detail="vm.navigateToDetail">\n    </c8y-fieldbus-device-list>\n  </div>\n</div>\n\n<div ng-if="vm.isCanOpenTab()" class="row">\n  <div class="col-lg-4 col-xs-12">\n    <div class="card-group" style="margin-bottom: 0">\n      <div class="col-lg-12 col-sm-6 col-xs-12">\n        <div class="card">\n          <div class="card-header">\n            <h4 class="card-title">\n              <span ng-if="vm.isCanOpenTab()" translate>\n                CANopen communication\n              </span>             \n            </h4>\n          </div>\n          <hr>\n          <div class="card-block">\n            <form name="vm.fieldbusCommunicationForm">\n              <div ng-if="vm.isCanOpenTab()" class="form-group" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'baudRate\')}">\n                <label for="fieldbusCommunicationBaudRate" translate>\n                  Baud rate\n                </label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="fieldbusCommunicationBaudRate" name="baudRate" ng-model="vm.fieldbusConfiguration.baudRate" ng-options="baudRate.value as baudRate.label for baudRate in vm.fieldbusConfigurationOptions.baudRates" ng-disabled="!vm.hasFieldBusConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div class="form-group modbusComInputs" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'transmitRate\')}">\n                <label for="transmitRate" translate>Transmit rate</label>\n                <div class="input-group">\n                  <input class="form-control input-border" type="number" id="transmitRate" name="transmitRate" ng-model="vm.fieldbusConfiguration.transmitRate" ng-disabled="!vm.hasFieldBusConfigOperation" ng-min="1" placeholder="{{\'e.g.\' | translate}} 1" required uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.transmitRate)}}" aria-describedby="transmitRateUnits">\n                  <span class="input-group-addon units" translate>\n                    seconds\n                  </span>\n                </div>\n              </div>\n              <div ng-if="vm.isCanOpenTab()" class="form-group modbusComInputs" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'pollingRate\')}">\n                <label for="pollingRate" translate>Polling rate</label>\n                <div class="input-group">\n                  <input class="form-control input-border" type="number" id="pollingRate" name="pollingRate" ng-model="vm.fieldbusConfiguration.pollingRate" ng-disabled="!vm.hasFieldBusConfigOperation" ng-min="1" placeholder="{{\'e.g.\' | translate}} 1" required uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.pollingRate)}}" aria-describedby="pollingRateUnits">\n                  <span class="input-group-addon units" translate>\n                    seconds\n                  </span>\n                </div>\n              </div>\n            </form>\n            <button ng-if="vm.hasFieldBusConfigOperation" class="btn btn-primary" ng-click="vm.saveFieldbusConfig()" ng-disabled="vm.fieldbusCommunicationForm.$invalid" translate>\n              Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="col-lg-8 col-xs-12">\n    <c8y-fieldbus-device-list tab="{{vm.tab}}" mode="CANopen" field-errors="vm.fieldErrors" field-errors-to-messages="vm.fieldErrorsToMessages" device-configuration-options="vm.deviceConfigurationOptions" device="vm.device" devices="vm.devices" reload-devices="vm.reloadDevices" on-click-delete="vm.onClickDelete" navigate-to-detail="vm.navigateToDetail"> \n    </c8y-fieldbus-device-list>   \n  </div>\n</div>\n\n\n',e.put("modbusConfiguration4/fieldbus-config.html",n),e.put("core_modbusConfiguration4/fieldbus-config.html",n),e.put("/apps/core/modbusConfiguration4/fieldbus-config.html",n),n='<div ng-if="vm.shouldShowSection()" class="card">\n  <div class="card-header">\n    <h4 class="card-title">{{vm.mode}}</h4>\n  </div>\n  <hr ng-if="filtered.length === 0" style="margin: 0">\n  <div class="list-group">\n    <div ng-if="filtered.length > 0" class="list-group-item hidden-xs">\n      <div class="flex-row">\n        <div ng-if="vm.mode !== \'CAN\'" class="col-sm-3 col-xs-12">\n          <label class="small" translate>Name</label>\n        </div>\n        <div class="col-sm-3 col-xs-12">\n          <label class="small" translate>Device type</label>\n        </div>\n        <div ng-if="vm.mode !== \'CAN\' && vm.mode !== \'Profibus\' && vm.mode !==\'CANopen\'" class="col-sm-2 col-xs-12">\n          <label class="small" translate>Address</label>\n        </div>\n        <div ng-if="vm.mode ===\'CANopen\'" class="col-sm-2 col-xs-12">\n          <label class="small" translate>Node Id</label>\n        </div>\n        <div ng-if="vm.mode === \'TCP\'" class="col-sm-3 col-xs-12">\n          <label class="small" translate>IP address</label>\n        </div>\n      </div>\n    </div>\n    <div class="list-group-item" ng-repeat="device in vm.devices | orderBy:\'name\' | filter:vm.filterByMode() as filtered">\n      <div class="flex-row">\n        <div ng-if="vm.mode !== \'CAN\'" class="col-sm-3 col-xs-12 interact" ng-click="vm.navigateToDetail(device)">\n          <label class="small visible-xs-inline-block" translate>\n            Name\n          </label>\n          {{device.name}}\n        </div>\n        <div class="col-sm-3 col-xs-12">\n          <label class="small visible-xs-inline-block" translate>\n            Device type\n          </label>\n          {{device.deviceType}}\n        </div>\n        <div ng-if="vm.mode !== \'CAN\' && vm.mode !== \'Profibus\' && vm.mode !==\'CANopen\'" class="col-sm-2 col-xs-12">\n          <label class="small visible-xs-inline-block" translate>\n            Address\n          </label>\n          {{device.address}}\n        </div>\n        <div ng-if="vm.mode ===\'CANopen\'" class="col-sm-2 col-xs-12">\n          <label class="small visible-xs-inline-block" translate>\n            Node Id\n          </label>\n          {{device.nodeId}}\n        </div>\n        <div ng-if="vm.mode === \'TCP\'" class="col-sm-3 col-xs-12">\n          <label class="small visible-xs-inline-block" translate>\n            IP address\n          </label>\n          {{device.ipAddress}}\n        </div>\n        <div class="col-sm-1 col-xs-12 text-right showOnHover">\n          <button class="btn btn-link" title="{{\'Remove\' | translate}}" ng-click="vm.onClickDelete(device)">\n            <i c8y-icon="minus-circle" class="text-danger"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <c8y-load-more ng-repeat-end change-page-size></c8y-load-more>\n\n  <form ng-if="vm.newDevice" class="card-block bg-gray-white" name="vm.new{{vm.mode}}DeviceForm" novalidate>\n    <div ng-if="vm.mode !== \'CAN\'" class="form-group" ng-class="{\'has-error\': vm.invalid(\'name\')}" uib-tooltip="{{vm.getFieldValidationHints(\'name\')}}">\n      <input class="form-control" name="name" placeholder="{{\'Name\' | translate}}" ng-model="vm.newDevice.name" ng-disabled="vm.newDevice.adding" required>\n    </div>\n    <div class="form-group" ng-class="{\'has-error\': vm.invalid(\'deviceType\')}" uib-tooltip="{{vm.getFieldValidationHints(\'deviceType\')}}">\n      <ui-select class="form-control" name="deviceType" append-to-body="true" ng-model="vm.newDevice.deviceType" ng-disabled="vm.newDevice.adding" required>\n        <ui-select-match placeholder="{{\'Select a device type…\' | translate}}" title="{{$select.selected.name}}" ng-bind="$select.selected.name">\n        </ui-select-match>\n        <ui-select-choices repeat="type in vm.deviceConfigurationOptions.types | orderBy:\'name\' | filter:$select.search">\n          <span title="{{type.name}}">{{type.name}}</span>\n        </ui-select-choices>\n      </ui-select>\n    </div>\n\n    <div ng-if="vm.mode !== \'CAN\' && vm.mode !== \'Profibus\' && vm.mode !== \'CANopen\'" class="form-group" ng-class="{\'has-error\': vm.invalid(\'address\')}" uib-tooltip="{{vm.getFieldValidationHints(\'address\')}}">\n      <input class="form-control" type="number" name="address" placeholder="{{\'Address\' | translate}}" ng-model="vm.newDevice.address" ng-min="0" ng-max="255" step="1" required ng-disabled="vm.newDevice.adding">\n    </div>\n\n    <div ng-if="vm.mode === \'CANopen\'" class="form-group" ng-class="{\'has-error\': vm.invalid(\'nodeId\')}" uib-tooltip="{{vm.getFieldValidationHints(\'nodeId\')}}">\n      <input class="form-control" type="number" name="nodeId" placeholder="{{\'Node Id\' | translate}}" ng-model="vm.newDevice.nodeId" step="1" required ng-disabled="vm.newDevice.adding">\n    </div>\n\n    <div class="form-group" ng-if="vm.mode === \'TCP\'" ng-class="{\'has-error\': vm.invalid(\'ipAddress\')}" uib-tooltip="{{vm.getFieldValidationHints(\'ipAddress\')}}">\n      <input class="form-control" id="ipAddress" name="ipAddress" ng-model="vm.newDevice.ipAddress" placeholder="{{\'IP address\' | translate}}" validate-ip maxlength="15" required ng-disabled="vm.newDevice.adding">\n    </div>\n\n    <button class="btn btn-default" ng-click="vm.clearNewDevice()" ng-disabled="vm.newDevice.adding" translate>\n      Cancel\n    </button>\n\n    <button class="btn btn-primary" ng-click="vm.addNewDevice()" ng-disabled="vm.isFormInvalid()">\n      <span ng-if="!vm.newDevice.adding" translate>Add</span>\n      <span ng-if="vm.newDevice.adding">\n        <i c8y-icon="circle-o-notch" class="fa-spin"></i>\n        <span translate>Adding</span>&hellip;\n      </span>\n    </button>\n  </form>\n\n  <div class="card-block">\n    <button class="btn-add-block" ng-click="vm.startAddingNewDevice()">\n      <i c8y-icon="plus-circle"></i>\n      <span translate>Add {{vm.mode}} device</span>\n    </button>\n  </div>\n</div>\n\n<div ng-if="vm.isOPCUATab()">\n  <button class="btn btn-link pull-right" ng-click="vm.startAddingNewDevice()">\n    <i c8y-icon="plus"></i>\n    <span translate>Add OPCUA device</span>\n  </button>\n  <div class="clearfix"></div>\n  <form ng-if="vm.newDevice" class="panel-body" name="vm.newOPCUADeviceForm" novalidate>\n    <div class="row">\n      <div class="form-group col-lg-3" ng-class="{\'has-error\': vm.invalid(\'name\')}" uib-tooltip="{{vm.getFieldValidationHints(\'name\')}}">\n        <input class="form-control input-border" placeholder="{{\'Name\' | translate}}" name="name" ng-model="vm.newDevice.name" required ng-disabled="vm.newDevice.adding">\n      </div>\n      <div class="form-group col-lg-3" ng-class="{\'has-error\': vm.invalid(\'directoryPath\')}" uib-tooltip="{{vm.getFieldValidationHints(\'directoryPath\')}}">\n        <input class="form-control input-border" placeholder="{{\'Directory path\' | translate}}" name="directoryPath" ng-model="vm.newDevice.directoryPath" required ng-disabled="vm.newDevice.adding">\n      </div>\n      <div class="form-group col-lg-3" ng-class="{\'has-error\': vm.invalid(\'deviceType\')}" uib-tooltip="{{vm.getFieldValidationHints(\'deviceType\')}}">\n        <ui-select class="form-control" name="deviceType" append-to-body="true" ng-model="vm.newDevice.deviceType" required ng-disabled="vm.newDevice.adding">\n          <ui-select-match title="{{$select.selected.name}}" ng-bind="$select.selected.name">\n          </ui-select-match>\n          <ui-select-choices repeat="type in vm.deviceConfigurationOptions.types | orderBy:\'name\' | filter:$select.search">\n            <span title="{{type.name}}">{{type.name}}</span>\n          </ui-select-choices>\n        </ui-select>\n      </div>\n      <div class="form-group col-lg-3">\n        <button class="btn btn-primary" ng-click="vm.addNewDevice()" ng-disabled="vm.isFormInvalid()">\n          <span ng-if="!vm.newDevice.adding" translate>Add</span>\n          <span ng-if="vm.newDevice.adding">\n            <i c8y-icon="spinner" class="fa-spin"></i>\n            <span translate>Adding</span>&hellip;</span>\n        </button>\n        <button class="btn btn-default" ng-click="vm.clearNewDevice()" ng-disabled="vm.newDevice.adding" translate>\n          Cancel\n        </button>\n      </div>\n    </div>\n  </form>\n\n  <table class="table table-hover">\n    <tr>\n      <th translate>Name</th>\n      <th translate>Directory path</th>\n      <th translate>Device type</th>\n      <th>&nbsp;</th>\n    </tr>\n    <tr ng-repeat="device in vm.devices | filter:vm.filterByMode() | orderBy:\'-\'">\n      <td class="interact" ng-click="vm.navigateToDetail(device)">\n        {{device.name}}\n      </td>\n      <td>{{device.directoryPath}}</td>\n      <td>{{device.deviceType}}</td>\n      <td class="text-right">\n        <button class="btn btn-danger btn-xs showOnHover" title="{{\'Remove\' | translate}}" ng-click="vm.onClickDelete(device)">\n          <i c8y-icon="times"></i>\n        </button>\n      </td>\n    </tr>\n  </table>\n\n  <c8y-load-more ng-repeat-end change-page-size></c8y-load-more>\n</div>\n',
e.put("modbusConfiguration4/fieldbus-device-list.html",n),e.put("core_modbusConfiguration4/fieldbus-device-list.html",n),e.put("/apps/core/modbusConfiguration4/fieldbus-device-list.html",n)}angular.module("c8y.modbusConfiguration4").run(["$templateCache",e])}();