/* core_modbusConfiguration 9.12.5 2018-08-27T16:54:18+00:00 b689bea882f7+ (release/9.12.0) tip */
!function(){"use strict";function e(e){var n="crosshairs",i="Modbus",t="/device/:deviceId",a="core_modbusConfiguration/views/";e.when(t,{name:i,icon:n,templateUrl:a+"modbusConfiguration.html",showIf:["$routeParams","c8yBase","c8yDevices",function(e,n,i){return i.detailCached(e.deviceId).then(n.getResData).then(function(e){return!_.isUndefined(e.c8y_ModbusConfiguration)})}],controller:["$scope","$routeParams","c8yBase","c8yDevices",function(e,n,i,t){e.device={},t.detail(n.deviceId).then(i.getResData).then(function(n){e.device=n})}]})}angular.module("c8y.modbusConfiguration",[]).config(["c8yViewsProvider",e])}(),function(){"use strict";function e(e,n,i,t,a,o,s,r,d,l,c,u,m){function v(){l.getAvailableDeviceTypes().then(g).then(p).then(h).then(y)}function g(e){U.types.length=0,_.forEach(e,function(e){U.types.push(e)})}function p(){return e.devices=(e.devices||[]).length=0,f().then(b)}function f(){return s.childDevices(V)}function b(n){n=_.isArray(n)?n:[n],e.devices=e.devices||[],_.forEach(n,function(n){var i=_.find(U.types,function(e){return n.c8y_ModbusDevice.type==="/inventory/managedObjects/"+e.id});e.devices.push({id:n.id,name:n.name,deviceType:i&&i.name,address:n.c8y_ModbusDevice.address,ipAddress:n.c8y_ModbusDevice.ipAddress})})}function h(){return O(e.device)?["TCP"]:["RTU","ASCII"]}function y(e){x.protocols=e}function D(){e.newDevice={name:null,deviceType:null,address:null}}function C(n){return S(n)?void d.danger(u("Device with the same address already exists!")):(n.adding=!0,void c.create(e.device,n).then(w,R))}function w(){A(),p(),d.success(u("New child device has been added!"))}function R(){e.newDevice.adding=!1,d.danger(u("Failed to add new child device."))}function S(n){return!!_.find(e.devices,function(i){return i.address===n.address&&O(e.device)&&i.ipAddress===i.ipAddress})}function A(){delete e.newDevice,e.newDeviceForm.$setPristine()}function T(e){var i=[];return i.push(E(e)),i.push(F(e)),n.all(i).then(function(){d.success(u("Operations to update terminal configuration have been sent!"))})}function E(e){if(e.c8y_SerialConfiguration){var n={deviceId:e.id,description:u("Set serial configuration"),c8y_SerialConfiguration:e.c8y_SerialConfiguration};return a.create(n)}}function F(e){if(e.c8y_ModbusConfiguration){var n={deviceId:e.id,description:u("Set modbus configuration"),c8y_ModbusConfiguration:e.c8y_ModbusConfiguration};return a.create(n)}}function I(e){t.url("device/"+e.id)}function M(n){r({title:u("Confirm delete?"),body:m.getString('Do you really want to remove device "{{name}}" with id {{id}}?',n),status:"danger"}).then(angular.bind(s,s.remove,n)).then(_.partial(_.pull,e.devices,n)).then(_.partial(d.success,u("Device successfully deleted!")))}function N(n,i){return $(),P(),o.invalid(e,n,i)}function $(){var n="newDeviceForm",i=e[n].address,t=i.$modelValue,a=e[n].ipAddress,o=a.$modelValue,s=!O(e.device)&&t&&_.some(e.devices,{address:t}),r=O(e.device)&&t&&o&&_.some(e.devices,{address:t,ipAddress:o});i.$setValidity(H.ADDRESS_IN_USE,!s),i.$setValidity(H.ADDRESSES_IN_USE,!r),a.$setValidity(H.ADDRESSES_IN_USE,!r)}function P(){var n="modbusCommunicationForm",i=e[n].pollingRate,t=e[n].transmitRate,a=!(i.$modelValue>t.$modelValue);i.$setValidity(H.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE,a)}function B(n,i){var t=[];return e[n][i]&&e[n][i].$error&&_.forEach(e[n][i].$error,function(e,n){e&&t.push(m.getString(k[n]))}),t.join(" ")}function O(e){return e&&e.c8y_ModbusConfiguration&&"TCP"===e.c8y_ModbusConfiguration.protocol}var V=i.deviceId,q={baudRates:[3200,9600,19200,38400],dataBits:[7,8],parities:["N","E","O"],stopBits:[1,2]},x={protocols:[]},U={types:[]},H={IS_REQUIRED:"required",ADDRESS_IN_USE:"address-in-use",ADDRESSES_IN_USE:"addresses-in-use",POLLING_RATE_LARGER_THAN_TRANSMIT_RATE:"polling-rate-larger-than-transmit-rate"},k={};k[H.IS_REQUIRED]=u("This field is required!"),k[H.ADDRESS_IN_USE]=u("This address is already in use!"),k[H.ADDRESSES_IN_USE]=u("These addresses are already in use!"),k[H.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE]=u("Polling rate should be equal to or smaller than transmit rate!"),e.invalid=N,e.getFieldValidationHints=B,e.serialConfigurationOptions=q,e.modbusConfigurationOptions=x,e.deviceConfigurationOptions=U,e.save=T,e.startAddingNewDevice=D,e.addNewDevice=C,e.clearNewDevice=A,e.navigateToDetail=I,e.onClickDelete=M,e.usesModbusTCP=O,v()}angular.module("c8y.modbusConfiguration").controller("modbusConfigCtrl",["$scope","$q","$routeParams","$location","c8yDeviceControl","c8yBase","c8yDevices","c8yModal","c8yAlert","c8yDeviceDatabase","c8yModbusDevice","gettext","gettextCatalog",e])}(),function(){"use strict";function e(e){var n;n='<div ng-controller="modbusConfigCtrl">\n  <div class="panel panel-clean panel-border" ng-show="device.c8y_SerialConfiguration">\n    <div class="panel-heading">\n      <i c8y-icon="hdd-o"></i> <translate>Serial communication</translate>\n    </div>\n    <div class="panel-body">\n      <form role="form" name="serialCommunicationForm">\n        <div class="row">\n          <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(\'serialCommunicationForm\', \'baudRate\')}">\n            <label for="baudRate" translate>Baud rate</label>\n            <select class="form-control input-border" id="baudRate" name="baudRate" ng-model="device.c8y_SerialConfiguration.baudRate" ng-options="br for br in serialConfigurationOptions.baudRates" required></select>\n          </div>\n          <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(\'serialCommunicationForm\', \'dataBits\')}">\n            <label for="dataBits" translate>Data bits</label>\n            <select class="form-control input-border" id="dataBits" name="dataBits" ng-model="device.c8y_SerialConfiguration.dataBits" ng-options="db for db in serialConfigurationOptions.dataBits" required></select>\n          </div>\n          <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(\'serialCommunicationForm\', \'parity\')}">\n            <label for="parity" translate>Parity</label>\n            <select class="form-control input-border" id="parity" name="parity" ng-model="device.c8y_SerialConfiguration.parity" ng-options="p for p in serialConfigurationOptions.parities" required></select>\n          </div>\n          <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(\'serialCommunicationForm\', \'stopBits\')}">\n            <label for="stopBits" translate>Stop bits</label>\n            <select class="form-control input-border" id="stopBits" name="stopBits" ng-model="device.c8y_SerialConfiguration.stopBits" ng-options="sb for sb in serialConfigurationOptions.stopBits" required></select>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class="panel panel-clean panel-border">\n    <div class="panel-heading">\n      <i c8y-icon="hdd-o"></i> <translate>Modbus communication</translate>\n    </div>\n    <div class="panel-body">\n      <form role="form" name="modbusCommunicationForm">\n        <div class="row">\n          <div class="form-group col-lg-2" ng-class="{\'has-error\': invalid(\'modbusCommunicationForm\', \'transmitRate\')}">\n            <label for="transmitRate" translate>Transmit rate</label>\n            <input type="number" class="form-control input-border" id="transmitRate" name="transmitRate" ng-model="device.c8y_ModbusConfiguration.transmitRate" min="0" required uib-tooltip="{{getFieldValidationHints(\'modbusCommunicationForm\', \'transmitRate\')}}">\n            <span style="font-size:18px" translate>seconds</span>\n          </div>\n          <div class="form-group col-lg-2" ng-class="{\'has-error\': invalid(\'modbusCommunicationForm\', \'pollingRate\')}">\n            <label for="pollingRate" translate>Polling rate</label>\n            <input type="number" class="form-control input-border" id="pollingRate" name="pollingRate" ng-model="device.c8y_ModbusConfiguration.pollingRate" min="0" max="{{device.c8y_ModbusConfiguration.transmitRate}}" placeholder="{{\'e.g.\' | translate}} 30" required uib-tooltip="{{getFieldValidationHints(\'modbusCommunicationForm\', \'pollingRate\')}}">\n            <span style="font-size:18px" translate>seconds</span>\n          </div>\n          <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(\'modbusCommunicationForm\', \'protocol\')}">\n            <label for="protocol" translate>Protocol</label>\n            <select class="form-control input-border" id="protocol" name="protocol" ng-model="device.c8y_ModbusConfiguration.protocol" ng-options="p for p in modbusConfigurationOptions.protocols" required ng-disabled="usesModbusTCP(device)"></select>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div style="margin-bottom: 30px">\n    <a href="" class="btn btn-primary" ng-click="save(device)" ng-disabled="(!usesModbusTCP(device) && serialCommunicationForm.$invalid) || modbusCommunicationForm.$invalid" translate>Save changes</a>\n  </div>\n\n  <div class="clearfix">\n    <button class="btn btn-link pull-right" ng-click="startAddingNewDevice()">\n      <i c8y-icon="plus"></i> <translate>Add new device</translate>\n    </button>\n  </div>\n\n  <form role="form" name="newDeviceForm" class="panel-body" novalidate ng-show="newDevice">\n    <div class="row">\n      <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(\'newDeviceForm\', \'name\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceForm\', \'name\')}}">\n        <input type="text" class="form-control" placeholder="{{\'Name\' | translate}}" name="name" ng-model="newDevice.name" required ng-disabled="newDevice.adding"/>\n      </div>\n      <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(\'newDeviceForm\', \'deviceType\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceForm\', \'deviceType\')}}">\n        <ui-select name="deviceType" ng-model="newDevice.deviceType" class="form-control" required ng-disabled="newDevice.adding">\n          <ui-select-match title="{{$select.selected.name}}" ng-bind="$select.selected.name"></ui-select-match>\n          <ui-select-choices repeat="t in deviceConfigurationOptions.types | orderBy:\'name\' | filter: $select.search">\n            <span title="{{t.name}}" ng-bind="t.name"></span>\n          </ui-select-choices>\n        </ui-select>\n      </div>\n      <div class="form-group col-lg-2" ng-class="{\'has-error\': invalid(\'newDeviceForm\', \'address\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceForm\', \'address\')}}">\n        <input type="number" class="form-control" placeholder="{{\'Address\' | translate}}" name="address" ng-model="newDevice.address" required min="1" max="247" step="1" ng-disabled="newDevice.adding"/>\n      </div>\n      <div ng-show="usesModbusTCP(device)" class="form-group col-lg-2" ng-class="{\'has-error\': invalid(\'newDeviceForm\', \'ipAddress\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceForm\', \'ipAddress\')}}">\n        <input id="ipAddress" name="ipAddress" type="text" validate-ip class="form-control" ng-model="newDevice.ipAddress" placeholder="{{\'IP address\' | translate}}" maxlength="15" ng-required="usesModbusTCP(device)" ng-disabled="newDevice.adding"/>\n      </div>\n      <div class="form-group col-lg-2">\n        <button class="btn btn-primary" ng-click="addNewDevice(newDevice)" ng-disabled="newDeviceForm.$invalid || newDevice.adding">\n          <span ng-hide="newDevice.adding" translate>Add</span>\n          <span ng-show="newDevice.adding"><i c8y-icon="spinner" class="fa-spin"></i> <translate>Adding</translate>&hellip;</span>\n        </button>\n        <button class="btn btn-default" ng-click="clearNewDevice(newDevice)" ng-disabled="newDevice.adding" translate>Cancel</button>\n      </div>\n    </div>\n  </form>\n\n  <table class="table table-hover">\n    <tr>\n      <th translate>Name</th>\n      <th translate>Device type</th>\n      <th translate>Address</th>\n      <th ng-show="usesModbusTCP(device)" translate>IP address</th>\n      <th>&nbsp;</th>\n    </tr>\n    <tr ng-repeat="dev in devices">\n      <td class="interact" ng-click="navigateToDetail(dev)">{{dev.name}}</td>\n      <td>{{dev.deviceType}}</td>\n      <td>{{dev.address}}</td>\n      <td ng-show="usesModbusTCP(device)">{{dev.ipAddress}}</td>\n      <td class="text-right">\n        <button class="btn btn-danger btn-xs showOnHover" title="{{\'Remove\' | translate}}" ng-click="onClickDelete(dev)">\n          <i c8y-icon="times"></i>\n        </button>\n      </td>\n    </tr>\n  </table>\n\n  <c8y-load-more change-page-size></c8y-load-more>\n\n</div>\n',e.put("modbusConfiguration/views/modbusConfiguration.html",n),e.put("core_modbusConfiguration/views/modbusConfiguration.html",n),e.put("/apps/core/modbusConfiguration/views/modbusConfiguration.html",n)}angular.module("c8y.modbusConfiguration").run(["$templateCache",e])}();